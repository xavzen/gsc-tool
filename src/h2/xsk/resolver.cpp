// Copyright 2021 xensik. All rights reserved.
//
// Use of this source code is governed by a GNU GPLv3 license
// that can be found in the LICENSE file.

#include "stdafx.hpp"
#include "h2.hpp"

namespace xsk::gsc::h2
{

std::unordered_map<std::uint8_t, std::string> opcode_map;
std::unordered_map<std::uint16_t, std::string> function_map;
std::unordered_map<std::uint16_t, std::string> method_map;
std::unordered_map<std::uint16_t, std::string> file_map;
std::unordered_map<std::uint16_t, std::string> token_map;
std::unordered_map<std::string, std::uint8_t> opcode_map_rev;
std::unordered_map<std::string, std::uint16_t> function_map_rev;
std::unordered_map<std::string, std::uint16_t> method_map_rev;
std::unordered_map<std::string, std::uint16_t> file_map_rev;
std::unordered_map<std::string, std::uint16_t> token_map_rev;

auto resolver::opcode_id(const std::string& name) -> std::uint8_t
{
    const auto itr = opcode_map_rev.find(name);

    if (itr != opcode_map_rev.end())
    {
        return itr->second;
    }

    throw gsc::error(utils::string::va("Couldn't resolve opcode id for name '%s'!", name.data()));
}

auto resolver::opcode_name(std::uint8_t id) -> std::string
{
    const auto itr = opcode_map.find(id);

    if (itr != opcode_map.end())
    {
        return itr->second;
    }

    throw gsc::error(utils::string::va("Couldn't resolve opcode name for id '0x%hhX'!", id));
}

auto resolver::function_id(const std::string& name) -> std::uint16_t
{
    const auto itr = function_map_rev.find(name);

    if (itr != function_map_rev.end())
    {
        return itr->second;
    }

    throw gsc::error(utils::string::va("Couldn't resolve builtin function id for name '%s'!", name.data()));
}

auto resolver::function_name(std::uint16_t id) -> std::string
{
    const auto itr = function_map.find(id);

    if (itr != function_map.end())
    {
        return itr->second;
    }

    throw gsc::error(utils::string::va("Couldn't resolve builtin function name for id '%i'!", id));
}

auto resolver::method_id(const std::string& name) -> std::uint16_t
{
    const auto itr = method_map_rev.find(name);

    if (itr != method_map_rev.end())
    {
        return itr->second;
    }

    throw gsc::error(utils::string::va("Couldn't resolve builtin method id for name '%s'!", name.data()));
}

auto resolver::method_name(std::uint16_t id) -> std::string
{
    const auto itr = method_map.find(id);

    if (itr != method_map.end())
    {
        return itr->second;
    }

    throw gsc::error(utils::string::va("Couldn't resolve builtin method name for id '%i'!", id));
    return utils::string::va("_ID%i", id);
}

auto resolver::file_id(const std::string& name) -> std::uint16_t
{
    const auto itr = file_map_rev.find(name);

    if (itr != file_map_rev.end())
    {
        return itr->second;
    }

    return 0;
}

auto resolver::file_name(std::uint16_t id) -> std::string
{
    const auto itr = file_map.find(id);

    if (itr != file_map.end())
    {
        return itr->second;
    }

    return utils::string::va("_ID%i", id);
}

auto resolver::token_id(const std::string& name) -> std::uint16_t
{
    const auto itr = token_map_rev.find(name);

    if (itr != token_map_rev.end())
    {
        return itr->second;
    }

    return 0;
}

auto resolver::token_name(std::uint16_t id) -> std::string
{
    const auto itr = token_map.find(id);

    if (itr != token_map.end())
    {
        return itr->second;
    }

    return utils::string::va("_ID%i", id);
}

auto resolver::find_function(const std::string& name) -> bool
{
    const auto itr = function_map_rev.find(name);

    if (itr != function_map_rev.end())
    {
        return true;
    }

    return false;
}

auto resolver::find_method(const std::string& name) -> bool
{
    const auto itr = method_map_rev.find(name);

    if (itr != method_map_rev.end())
    {
        return true;
    }

    return false;
}

const std::array<gsc::pair_8C, 154> opcode_list
{{
    { std::uint8_t(opcode::OP_End),"END" },
    { std::uint8_t(opcode::OP_Return),"RETN" },
    { std::uint8_t(opcode::OP_GetByte),"GET_BYTE" },
    { std::uint8_t(opcode::OP_GetNegByte),"GET_NBYTE" },
    { std::uint8_t(opcode::OP_GetUnsignedShort),"GET_USHORT" },
    { std::uint8_t(opcode::OP_GetNegUnsignedShort),"GET_NUSHORT" },
    { std::uint8_t(opcode::OP_GetInteger),"GET_INT" },
    { std::uint8_t(opcode::OP_GetBuiltinFunction),"GET_BUILTIN_FUNC" },
    { std::uint8_t(opcode::OP_GetBuiltinMethod),"GET_BUILTIN_METHOD" },
    { std::uint8_t(opcode::OP_GetFloat),"GET_FLOAT" },
    { std::uint8_t(opcode::OP_GetString),"GET_STRING" },
    { std::uint8_t(opcode::OP_GetUndefined),"GET_UNDEFINED" },
    { std::uint8_t(opcode::OP_GetZero),"GET_ZERO" },
    { std::uint8_t(opcode::OP_waittillFrameEnd),"WAITTILLFRAMEEND" },
    { std::uint8_t(opcode::OP_CreateLocalVariable),"CREATE_LOCAL_VARIABLE" },
    { std::uint8_t(opcode::OP_RemoveLocalVariables),"REMOVE_LOCAL_VARIABLES" },
    { std::uint8_t(opcode::OP_EvalLocalVariableCached0),"EVAL_LOCAL_VARIABLE_CACHED0" },
    { std::uint8_t(opcode::OP_EvalLocalVariableCached1),"EVAL_LOCAL_VARIABLE_CACHED1" },
    { std::uint8_t(opcode::OP_EvalLocalVariableCached2),"EVAL_LOCAL_VARIABLE_CACHED2" },
    { std::uint8_t(opcode::OP_EvalLocalVariableCached3),"EVAL_LOCAL_VARIABLE_CACHED3" },
    { std::uint8_t(opcode::OP_EvalLocalVariableCached4),"EVAL_LOCAL_VARIABLE_CACHED4" },
    { std::uint8_t(opcode::OP_EvalLocalVariableCached5),"EVAL_LOCAL_VARIABLE_CACHED5" },
    { std::uint8_t(opcode::OP_EvalLocalVariableCached),"EVAL_LOCAL_VARIABLE_CACHED" },
    { std::uint8_t(opcode::OP_EvalLocalArrayCached),"EVAL_LOCAL_ARRAY_CACHED" },
    { std::uint8_t(opcode::OP_EvalArray),"EVAL_ARRAY" },
    { std::uint8_t(opcode::OP_EvalNewLocalArrayRefCached0),"EVAL_NEW_LOCAL_ARRAY_REF_CACHED0" },
    { std::uint8_t(opcode::OP_EvalLocalArrayRefCached0),"EVAL_LOCAL_ARRAY_REF_CACHED0" },
    { std::uint8_t(opcode::OP_EvalLocalArrayRefCached),"EVAL_LOCAL_ARRAY_REF_CACHED" },
    { std::uint8_t(opcode::OP_EvalArrayRef),"EVAL_ARRAY_REF" },
    { std::uint8_t(opcode::OP_ClearArray),"CLEAR_ARRAY" },
    { std::uint8_t(opcode::OP_EmptyArray),"EMPTY_ARRAY" },
    { std::uint8_t(opcode::OP_AddArray),"ADD_ARRAY" },
    { std::uint8_t(opcode::OP_PreScriptCall),"PRE_CALL" },
    { std::uint8_t(opcode::OP_ScriptLocalFunctionCall2),"CALL_LOCAL_FUNC2" },
    { std::uint8_t(opcode::OP_ScriptLocalFunctionCall),"CALL_LOCAL_FUNC" },
    { std::uint8_t(opcode::OP_ScriptLocalMethodCall),"CALL_LOCAL_METHOD" },
    { std::uint8_t(opcode::OP_ScriptLocalThreadCall),"CALL_LOCAL_FUNC_THREAD" },
    { std::uint8_t(opcode::OP_ScriptLocalChildThreadCall),"CALL_LOCAL_FUNC_CHILD_THREAD" },
    { std::uint8_t(opcode::OP_ScriptLocalMethodThreadCall),"CALL_LOCAL_METHOD_THREAD" },
    { std::uint8_t(opcode::OP_ScriptLocalMethodChildThreadCall),"CALL_LOCAL_METHOD_CHILD_THREAD" },
    { std::uint8_t(opcode::OP_ScriptFarFunctionCall2),"CALL_FAR_FUNC2" },
    { std::uint8_t(opcode::OP_ScriptFarFunctionCall),"CALL_FAR_FUNC" },
    { std::uint8_t(opcode::OP_ScriptFarMethodCall),"CALL_FAR_METHOD" },
    { std::uint8_t(opcode::OP_ScriptFarThreadCall),"CALL_FAR_FUNC_THREAD" },
    { std::uint8_t(opcode::OP_ScriptFarChildThreadCall),"CALL_FAR_FUNC_CHILD_THREAD"},
    { std::uint8_t(opcode::OP_ScriptFarMethodThreadCall),"CALL_FAR_METHOD_THEAD" },
    { std::uint8_t(opcode::OP_ScriptFarMethodChildThreadCall),"CALL_FAR_METHOD_CHILD_THEAD" },
    { std::uint8_t(opcode::OP_ScriptFunctionCallPointer),"CALL_FUNC_POINTER" },
    { std::uint8_t(opcode::OP_ScriptMethodCallPointer),"CALL_METHOD_POINTER" },
    { std::uint8_t(opcode::OP_ScriptThreadCallPointer),"CALL_FUNC_THREAD_POINTER" },
    { std::uint8_t(opcode::OP_ScriptChildThreadCallPointer),"CALL_FUNC_CHILD_THREAD_POINTER" },
    { std::uint8_t(opcode::OP_ScriptMethodThreadCallPointer),"CALL_METHOD_THREAD_POINTER" },
    { std::uint8_t(opcode::OP_ScriptMethodChildThreadCallPointer),"CALL_METHOD_CHILD_THREAD_POINTER" },
    { std::uint8_t(opcode::OP_CallBuiltinPointer),"CALL_BUILTIN_FUNC_POINTER" },
    { std::uint8_t(opcode::OP_CallBuiltinMethodPointer),"CALL_BUILTIN_METHOD_POINTER" },
    { std::uint8_t(opcode::OP_GetIString),"GET_ISTRING" },
    { std::uint8_t(opcode::OP_GetVector),"GET_VECTOR" },
    { std::uint8_t(opcode::OP_GetLevelObject),"GET_LEVEL_OBJ" },
    { std::uint8_t(opcode::OP_GetAnimObject),"GET_ANIM_OBJ" },
    { std::uint8_t(opcode::OP_GetSelf),"GET_SELF" },
    { std::uint8_t(opcode::OP_GetThisthread),"GET_THISTHREAD" },
    { std::uint8_t(opcode::OP_GetLevel),"GET_LEVEL" },
    { std::uint8_t(opcode::OP_GetGame),"GET_GAME" },
    { std::uint8_t(opcode::OP_GetAnim),"GET_ANIM" },
    { std::uint8_t(opcode::OP_GetAnimation),"GET_ANIMATION" },
    { std::uint8_t(opcode::OP_GetGameRef),"GET_GAME_REF" },
    { std::uint8_t(opcode::OP_inc),"INC" },
    { std::uint8_t(opcode::OP_dec),"DEC" },
    { std::uint8_t(opcode::OP_bit_or),"BIT_OR" },
    { std::uint8_t(opcode::OP_JumpOnFalseExpr),"JMP_EXPR_FALSE" },
    { std::uint8_t(opcode::OP_bit_ex_or),"BIT_EXOR" },
    { std::uint8_t(opcode::OP_bit_and),"BIT_AND" },
    { std::uint8_t(opcode::OP_equality),"EQUALITY" },
    { std::uint8_t(opcode::OP_inequality),"INEQUALITY" },
    { std::uint8_t(opcode::OP_less),"LESS" },
    { std::uint8_t(opcode::OP_greater),"GREATER" },
    { std::uint8_t(opcode::OP_JumpOnTrueExpr),"JMP_EXPR_TRUE" },
    { std::uint8_t(opcode::OP_less_equal),"LESSEQUAL" },
    { std::uint8_t(opcode::OP_jumpback),"JMP_BACK" },
    { std::uint8_t(opcode::OP_waittillmatch2),"WAITTILLMATCH2" },
    { std::uint8_t(opcode::OP_waittill),"WAITTILL" },
    { std::uint8_t(opcode::OP_notify),"NOTIFY" },
    { std::uint8_t(opcode::OP_endon),"ENDON" },
    { std::uint8_t(opcode::OP_voidCodepos),"VOIDCODEPOS" },
    { std::uint8_t(opcode::OP_switch),"SWITCH" },
    { std::uint8_t(opcode::OP_endswitch),"ENDSWITCH" },
    { std::uint8_t(opcode::OP_vector),"VECTOR" },
    { std::uint8_t(opcode::OP_JumpOnFalse),"JMP_FALSE" },
    { std::uint8_t(opcode::OP_greater_equal),"GREATEREQUAL" },
    { std::uint8_t(opcode::OP_shift_left),"SHIFT_LEFT" },
    { std::uint8_t(opcode::OP_shift_right),"SHIFT_RIGHT" },
    { std::uint8_t(opcode::OP_plus),"PLUS" },
    { std::uint8_t(opcode::OP_jump),"JMP" },
    { std::uint8_t(opcode::OP_minus),"MINUS" },
    { std::uint8_t(opcode::OP_multiply),"MULT" },
    { std::uint8_t(opcode::OP_divide),"DIV" },
    { std::uint8_t(opcode::OP_mod),"MOD" },
    { std::uint8_t(opcode::OP_JumpOnTrue),"JMP_TRUE" },
    { std::uint8_t(opcode::OP_size),"SIZE" },
    { std::uint8_t(opcode::OP_waittillmatch),"WAITTILLMATCH" },
    { std::uint8_t(opcode::OP_GetLocalFunction),"GET_LOCAL_FUNC" },
    { std::uint8_t(opcode::OP_GetFarFunction),"GET_FAR_FUNC" },
    { std::uint8_t(opcode::OP_GetSelfObject),"GET_SELF_OBJ" },
    { std::uint8_t(opcode::OP_EvalLevelFieldVariable),"EVAL_LEVEL_FIELD_VARIABLE" },
    { std::uint8_t(opcode::OP_EvalAnimFieldVariable),"EVAL_ANIM_FIELD_VARIABLE" },
    { std::uint8_t(opcode::OP_EvalSelfFieldVariable),"EVAL_SELF_FIELD_VARIABLE" },
    { std::uint8_t(opcode::OP_EvalFieldVariable),"EVAL_FIELD_VARIABLE" },
    { std::uint8_t(opcode::OP_EvalLevelFieldVariableRef),"EVAL_LEVEL_FIELD_VARIABLE_REF" },
    { std::uint8_t(opcode::OP_EvalAnimFieldVariableRef),"EVAL_ANIM_FIELD_VARIABLE_REF" },
    { std::uint8_t(opcode::OP_EvalSelfFieldVariableRef),"EVAL_SELF_FIELD_VARIABLE_REF" },
    { std::uint8_t(opcode::OP_EvalFieldVariableRef),"EVAL_FIELD_VARIABLE_REF" },
    { std::uint8_t(opcode::OP_ClearFieldVariable),"CLEAR_FIELD_VARIABLE" },
    { std::uint8_t(opcode::OP_SafeCreateVariableFieldCached),"SAFE_CREATE_VARIABLE_FIELD_CACHED" },
    { std::uint8_t(opcode::OP_SafeSetVariableFieldCached0),"SAFE_SET_VARIABLE_FIELD_CACHED0" },
    { std::uint8_t(opcode::OP_SafeSetVariableFieldCached),"SAFE_SET_VARIABLE_FIELD_CACHED" },
    { std::uint8_t(opcode::OP_SafeSetWaittillVariableFieldCached),"SAFE_SET_WAITTILL_VARIABLE_FIELD_CACHED" },
    { std::uint8_t(opcode::OP_GetAnimTree),"GET_ANIMTREE" },
    { std::uint8_t(opcode::OP_clearparams),"CLEAR_PARAMS" },
    { std::uint8_t(opcode::OP_checkclearparams),"CHECK_CLEAR_PARAMS" },
    { std::uint8_t(opcode::OP_EvalLocalVariableRefCached0),"EVAL_LOCAL_VARIABLE_REF_CACHED0" },
    { std::uint8_t(opcode::OP_EvalNewLocalVariableRefCached0),"EVAL_NEW_LOCAL_VARIABLE_REF_CACHED0" },
    { std::uint8_t(opcode::OP_EvalLocalVariableRefCached),"EVAL_LOCAL_VARIABLE_REF_CACHED" },
    { std::uint8_t(opcode::OP_SetLevelFieldVariableField),"SET_LEVEL_FIELD_VARIABLE_FIELD" },
    { std::uint8_t(opcode::OP_SetVariableField),"SET_VARIABLE_FIELD" },
    { std::uint8_t(opcode::OP_ClearVariableField),"CLEAR_VARIABLE_FIELD" },
    { std::uint8_t(opcode::OP_SetAnimFieldVariableField),"SET_ANIM_FIELD_VARIABLE_FIELD" },
    { std::uint8_t(opcode::OP_SetSelfFieldVariableField),"SET_SELF_FIELD_VARIABLE_FIELD" },
    { std::uint8_t(opcode::OP_SetLocalVariableFieldCached0),"SET_LOCAL_VARIABLE_FIELD_CACHED0" },
    { std::uint8_t(opcode::OP_SetNewLocalVariableFieldCached0),"SET_NEW_LOCAL_VARIABLE_FIELD_CACHED0" },
    { std::uint8_t(opcode::OP_SetLocalVariableFieldCached),"SET_LOCAL_VARIABLE_FIELD_CACHED" },
    { std::uint8_t(opcode::OP_ClearLocalVariableFieldCached),"CLEAR_LOCAL_VARIABLE_FIELD_CACHED" },
    { std::uint8_t(opcode::OP_ClearLocalVariableFieldCached0),"CLEAR_LOCAL_VARIABLE_FIELD_CACHED0" },
    { std::uint8_t(opcode::OP_CallBuiltin0),"CALL_BUILTIN_FUNC_0" },
    { std::uint8_t(opcode::OP_CallBuiltin1),"CALL_BUILTIN_FUNC_1" },
    { std::uint8_t(opcode::OP_CallBuiltin2),"CALL_BUILTIN_FUNC_2" },
    { std::uint8_t(opcode::OP_CallBuiltin3),"CALL_BUILTIN_FUNC_3" },
    { std::uint8_t(opcode::OP_CallBuiltin4),"CALL_BUILTIN_FUNC_4" },
    { std::uint8_t(opcode::OP_CallBuiltin5),"CALL_BUILTIN_FUNC_5" },
    { std::uint8_t(opcode::OP_CallBuiltin),"CALL_BUILTIN_FUNC" },
    { std::uint8_t(opcode::OP_CallBuiltinMethod0),"CALL_BUILTIN_METHOD_0" },
    { std::uint8_t(opcode::OP_CallBuiltinMethod1),"CALL_BUILTIN_METHOD_1" },
    { std::uint8_t(opcode::OP_CallBuiltinMethod2),"CALL_BUILTIN_METHOD_2" },
    { std::uint8_t(opcode::OP_CallBuiltinMethod3),"CALL_BUILTIN_METHOD_3" },
    { std::uint8_t(opcode::OP_CallBuiltinMethod4),"CALL_BUILTIN_METHOD_4" },
    { std::uint8_t(opcode::OP_CallBuiltinMethod5),"CALL_BUILTIN_METHOD_5" },
    { std::uint8_t(opcode::OP_CallBuiltinMethod),"CALL_BUILTIN_METHOD" },
    { std::uint8_t(opcode::OP_wait),"WAIT" },
    { std::uint8_t(opcode::OP_DecTop),"DEC_TOP" },
    { std::uint8_t(opcode::OP_CastFieldObject),"CAST_FIELD_OBJ" },
    { std::uint8_t(opcode::OP_EvalLocalVariableObjectCached),"EVAL_LOCAL_VARIABLE_OBJECT_CACHED" },
    { std::uint8_t(opcode::OP_CastBool),"CAST_BOOL" },
    { std::uint8_t(opcode::OP_BoolNot),"BOOL_NOT" },
    { std::uint8_t(opcode::OP_BoolComplement),"BOOL_COMPLEMENT" },
    { std::uint8_t(opcode::OP_waitFrame), "WAITFRAME" },
}};

const std::array<gsc::pair_16C, 800> function_list
{{
    { 0x001, "_func_001" },
    { 0x002, "_func_002" },
    { 0x003, "_func_003" },
    { 0x004, "_func_004" },
    { 0x005, "_func_005" },
    { 0x006, "_func_006" },
    { 0x007, "_func_007" },
    { 0x008, "_func_008" },
    { 0x009, "_func_009" },
    { 0x00A, "_func_00A" },
    { 0x00B, "_func_00B" },
    { 0x00C, "_func_00C" },
    { 0x00D, "_func_00D" },
    { 0x00E, "_func_00E" },
    { 0x00F, "_func_00F" },
    { 0x010, "_func_010" },
    { 0x011, "_func_011" },
    { 0x012, "_func_012" },
    { 0x013, "_func_013" },
    { 0x014, "_func_014" },
    { 0x015, "_func_015" },
    { 0x016, "_func_016" },
    { 0x017, "_func_017" },
    { 0x018, "_func_018" },
    { 0x019, "_func_019" },
    { 0x01A, "_func_01A" },
    { 0x01B, "_func_01B" },
    { 0x01C, "_func_01C" },
    { 0x01D, "_func_01D" },
    { 0x01E, "_func_01E" },
    { 0x01F, "_func_01F" },
    { 0x020, "_func_020" },
    { 0x021, "_func_021" },
    { 0x022, "_func_022" },
    { 0x023, "_func_023" },
    { 0x024, "_func_024" },
    { 0x025, "_func_025" },
    { 0x026, "_func_026" },
    { 0x027, "_func_027" },
    { 0x028, "_func_028" },
    { 0x029, "_func_029" },
    { 0x02A, "_func_02A" },
    { 0x02B, "_func_02B" },
    { 0x02C, "_func_02C" },
    { 0x02D, "_func_02D" },
    { 0x02E, "_func_02E" },
    { 0x02F, "_func_02F" },
    { 0x030, "_func_030" },
    { 0x031, "_func_031" },
    { 0x032, "_func_032" },
    { 0x033, "_func_033" },
    { 0x034, "_func_034" },
    { 0x035, "_func_035" },
    { 0x036, "_func_036" },
    { 0x037, "_func_037" },
    { 0x038, "_func_038" },
    { 0x039, "_func_039" },
    { 0x03A, "_func_03A" },
    { 0x03B, "_func_03B" },
    { 0x03C, "_func_03C" },
    { 0x03D, "_func_03D" },
    { 0x03E, "_func_03E" },
    { 0x03F, "_func_03F" },
    { 0x040, "_func_040" },
    { 0x041, "_func_041" },
    { 0x042, "_func_042" },
    { 0x043, "_func_043" },
    { 0x044, "_func_044" },
    { 0x045, "_func_045" },
    { 0x046, "_func_046" },
    { 0x047, "_func_047" },
    { 0x048, "_func_048" },
    { 0x049, "_func_049" },
    { 0x04A, "_func_04A" },
    { 0x04B, "_func_04B" },
    { 0x04C, "_func_04C" },
    { 0x04D, "_func_04D" },
    { 0x04E, "_func_04E" },
    { 0x04F, "_func_04F" },
    { 0x050, "_func_050" },
    { 0x051, "_func_051" },
    { 0x052, "_func_052" },
    { 0x053, "_func_053" },
    { 0x054, "_func_054" },
    { 0x055, "_func_055" },
    { 0x056, "_func_056" },
    { 0x057, "_func_057" },
    { 0x058, "_func_058" },
    { 0x059, "_func_059" },
    { 0x05A, "_func_05A" },
    { 0x05B, "_func_05B" },
    { 0x05C, "_func_05C" },
    { 0x05D, "_func_05D" },
    { 0x05E, "_func_05E" },
    { 0x05F, "_func_05F" },
    { 0x060, "_func_060" },
    { 0x061, "_func_061" },
    { 0x062, "_func_062" },
    { 0x063, "_func_063" },
    { 0x064, "_func_064" },
    { 0x065, "_func_065" },
    { 0x066, "_func_066" },
    { 0x067, "_func_067" },
    { 0x068, "_func_068" },
    { 0x069, "_func_069" },
    { 0x06A, "_func_06A" },
    { 0x06B, "_func_06B" },
    { 0x06C, "_func_06C" },
    { 0x06D, "_func_06D" },
    { 0x06E, "_func_06E" },
    { 0x06F, "_func_06F" },
    { 0x070, "_func_070" },
    { 0x071, "_func_071" },
    { 0x072, "_func_072" },
    { 0x073, "_func_073" },
    { 0x074, "_func_074" },
    { 0x075, "_func_075" },
    { 0x076, "_func_076" },
    { 0x077, "_func_077" },
    { 0x078, "_func_078" },
    { 0x079, "_func_079" },
    { 0x07A, "_func_07A" },
    { 0x07B, "_func_07B" },
    { 0x07C, "_func_07C" },
    { 0x07D, "_func_07D" },
    { 0x07E, "_func_07E" },
    { 0x07F, "_func_07F" },
    { 0x080, "_func_080" },
    { 0x081, "_func_081" },
    { 0x082, "_func_082" },
    { 0x083, "_func_083" },
    { 0x084, "_func_084" },
    { 0x085, "_func_085" },
    { 0x086, "_func_086" },
    { 0x087, "_func_087" },
    { 0x088, "_func_088" },
    { 0x089, "_func_089" },
    { 0x08A, "_func_08A" },
    { 0x08B, "_func_08B" },
    { 0x08C, "_func_08C" },
    { 0x08D, "_func_08D" },
    { 0x08E, "_func_08E" },
    { 0x08F, "_func_08F" },
    { 0x090, "_func_090" },
    { 0x091, "_func_091" },
    { 0x092, "_func_092" },
    { 0x093, "_func_093" },
    { 0x094, "_func_094" },
    { 0x095, "_func_095" },
    { 0x096, "_func_096" },
    { 0x097, "_func_097" },
    { 0x098, "_func_098" },
    { 0x099, "_func_099" },
    { 0x09A, "_func_09A" },
    { 0x09B, "_func_09B" },
    { 0x09C, "_func_09C" },
    { 0x09D, "_func_09D" },
    { 0x09E, "_func_09E" },
    { 0x09F, "_func_09F" },
    { 0x0A0, "_func_0A0" },
    { 0x0A1, "_func_0A1" },
    { 0x0A2, "_func_0A2" },
    { 0x0A3, "_func_0A3" },
    { 0x0A4, "_func_0A4" },
    { 0x0A5, "_func_0A5" },
    { 0x0A6, "_func_0A6" },
    { 0x0A7, "_func_0A7" },
    { 0x0A8, "_func_0A8" },
    { 0x0A9, "_func_0A9" },
    { 0x0AA, "_func_0AA" },
    { 0x0AB, "_func_0AB" },
    { 0x0AC, "_func_0AC" },
    { 0x0AD, "_func_0AD" },
    { 0x0AE, "_func_0AE" },
    { 0x0AF, "_func_0AF" },
    { 0x0B0, "_func_0B0" },
    { 0x0B1, "_func_0B1" },
    { 0x0B2, "_func_0B2" },
    { 0x0B3, "_func_0B3" },
    { 0x0B4, "_func_0B4" },
    { 0x0B5, "_func_0B5" },
    { 0x0B6, "_func_0B6" },
    { 0x0B7, "_func_0B7" },
    { 0x0B8, "_func_0B8" },
    { 0x0B9, "_func_0B9" },
    { 0x0BA, "_func_0BA" },
    { 0x0BB, "_func_0BB" },
    { 0x0BC, "_func_0BC" },
    { 0x0BD, "_func_0BD" },
    { 0x0BE, "_func_0BE" },
    { 0x0BF, "_func_0BF" },
    { 0x0C0, "_func_0C0" },
    { 0x0C1, "_func_0C1" },
    { 0x0C2, "_func_0C2" },
    { 0x0C3, "_func_0C3" },
    { 0x0C4, "_func_0C4" },
    { 0x0C5, "_func_0C5" },
    { 0x0C6, "_func_0C6" },
    { 0x0C7, "_func_0C7" },
    { 0x0C8, "_func_0C8" },
    { 0x0C9, "_func_0C9" },
    { 0x0CA, "_func_0CA" },
    { 0x0CB, "_func_0CB" },
    { 0x0CC, "_func_0CC" },
    { 0x0CD, "_func_0CD" },
    { 0x0CE, "_func_0CE" },
    { 0x0CF, "_func_0CF" },
    { 0x0D0, "_func_0D0" },
    { 0x0D1, "_func_0D1" },
    { 0x0D2, "_func_0D2" },
    { 0x0D3, "_func_0D3" },
    { 0x0D4, "_func_0D4" },
    { 0x0D5, "_func_0D5" },
    { 0x0D6, "_func_0D6" },
    { 0x0D7, "_func_0D7" },
    { 0x0D8, "_func_0D8" },
    { 0x0D9, "_func_0D9" },
    { 0x0DA, "_func_0DA" },
    { 0x0DB, "_func_0DB" },
    { 0x0DC, "_func_0DC" },
    { 0x0DD, "_func_0DD" },
    { 0x0DE, "_func_0DE" },
    { 0x0DF, "_func_0DF" },
    { 0x0E0, "_func_0E0" },
    { 0x0E1, "_func_0E1" },
    { 0x0E2, "_func_0E2" },
    { 0x0E3, "_func_0E3" },
    { 0x0E4, "_func_0E4" },
    { 0x0E5, "_func_0E5" },
    { 0x0E6, "_func_0E6" },
    { 0x0E7, "_func_0E7" },
    { 0x0E8, "_func_0E8" },
    { 0x0E9, "_func_0E9" },
    { 0x0EA, "_func_0EA" },
    { 0x0EB, "_func_0EB" },
    { 0x0EC, "_func_0EC" },
    { 0x0ED, "_func_0ED" },
    { 0x0EE, "_func_0EE" },
    { 0x0EF, "_func_0EF" },
    { 0x0F0, "_func_0F0" },
    { 0x0F1, "_func_0F1" },
    { 0x0F2, "_func_0F2" },
    { 0x0F3, "_func_0F3" },
    { 0x0F4, "_func_0F4" },
    { 0x0F5, "_func_0F5" },
    { 0x0F6, "_func_0F6" },
    { 0x0F7, "_func_0F7" },
    { 0x0F8, "_func_0F8" },
    { 0x0F9, "_func_0F9" },
    { 0x0FA, "_func_0FA" },
    { 0x0FB, "_func_0FB" },
    { 0x0FC, "_func_0FC" },
    { 0x0FD, "_func_0FD" },
    { 0x0FE, "_func_0FE" },
    { 0x0FF, "_func_0FF" },
    { 0x100, "_func_100" },
    { 0x101, "_func_101" },
    { 0x102, "_func_102" },
    { 0x103, "_func_103" },
    { 0x104, "_func_104" },
    { 0x105, "_func_105" },
    { 0x106, "_func_106" },
    { 0x107, "_func_107" },
    { 0x108, "_func_108" },
    { 0x109, "_func_109" },
    { 0x10A, "_func_10A" },
    { 0x10B, "_func_10B" },
    { 0x10C, "_func_10C" },
    { 0x10D, "_func_10D" },
    { 0x10E, "_func_10E" },
    { 0x10F, "_func_10F" },
    { 0x110, "_func_110" },
    { 0x111, "_func_111" },
    { 0x112, "_func_112" },
    { 0x113, "_func_113" },
    { 0x114, "_func_114" },
    { 0x115, "_func_115" },
    { 0x116, "_func_116" },
    { 0x117, "_func_117" },
    { 0x118, "_func_118" },
    { 0x119, "_func_119" },
    { 0x11A, "_func_11A" },
    { 0x11B, "_func_11B" },
    { 0x11C, "_func_11C" },
    { 0x11D, "_func_11D" },
    { 0x11E, "_func_11E" },
    { 0x11F, "_func_11F" },
    { 0x120, "_func_120" },
    { 0x121, "_func_121" },
    { 0x122, "_func_122" },
    { 0x123, "_func_123" },
    { 0x124, "_func_124" },
    { 0x125, "_func_125" },
    { 0x126, "_func_126" },
    { 0x127, "_func_127" },
    { 0x128, "_func_128" },
    { 0x129, "_func_129" },
    { 0x12A, "_func_12A" },
    { 0x12B, "_func_12B" },
    { 0x12C, "_func_12C" },
    { 0x12D, "_func_12D" },
    { 0x12E, "_func_12E" },
    { 0x12F, "_func_12F" },
    { 0x130, "_func_130" },
    { 0x131, "_func_131" },
    { 0x132, "_func_132" },
    { 0x133, "_func_133" },
    { 0x134, "_func_134" },
    { 0x135, "_func_135" },
    { 0x136, "_func_136" },
    { 0x137, "_func_137" },
    { 0x138, "_func_138" },
    { 0x139, "_func_139" },
    { 0x13A, "_func_13A" },
    { 0x13B, "_func_13B" },
    { 0x13C, "_func_13C" },
    { 0x13D, "_func_13D" },
    { 0x13E, "_func_13E" },
    { 0x13F, "_func_13F" },
    { 0x140, "_func_140" },
    { 0x141, "_func_141" },
    { 0x142, "_func_142" },
    { 0x143, "_func_143" },
    { 0x144, "_func_144" },
    { 0x145, "_func_145" },
    { 0x146, "_func_146" },
    { 0x147, "_func_147" },
    { 0x148, "_func_148" },
    { 0x149, "_func_149" },
    { 0x14A, "_func_14A" },
    { 0x14B, "_func_14B" },
    { 0x14C, "_func_14C" },
    { 0x14D, "_func_14D" },
    { 0x14E, "_func_14E" },
    { 0x14F, "_func_14F" },
    { 0x150, "_func_150" },
    { 0x151, "_func_151" },
    { 0x152, "_func_152" },
    { 0x153, "_func_153" },
    { 0x154, "_func_154" },
    { 0x155, "_func_155" },
    { 0x156, "_func_156" },
    { 0x157, "_func_157" },
    { 0x158, "_func_158" },
    { 0x159, "_func_159" },
    { 0x15A, "_func_15A" },
    { 0x15B, "_func_15B" },
    { 0x15C, "_func_15C" },
    { 0x15D, "_func_15D" },
    { 0x15E, "_func_15E" },
    { 0x15F, "_func_15F" },
    { 0x160, "_func_160" },
    { 0x161, "_func_161" },
    { 0x162, "_func_162" },
    { 0x163, "_func_163" },
    { 0x164, "_func_164" },
    { 0x165, "_func_165" },
    { 0x166, "_func_166" },
    { 0x167, "_func_167" },
    { 0x168, "_func_168" },
    { 0x169, "_func_169" },
    { 0x16A, "_func_16A" },
    { 0x16B, "_func_16B" },
    { 0x16C, "_func_16C" },
    { 0x16D, "_func_16D" },
    { 0x16E, "_func_16E" },
    { 0x16F, "_func_16F" },
    { 0x170, "_func_170" },
    { 0x171, "_func_171" },
    { 0x172, "_func_172" },
    { 0x173, "_func_173" },
    { 0x174, "_func_174" },
    { 0x175, "_func_175" },
    { 0x176, "_func_176" },
    { 0x177, "_func_177" },
    { 0x178, "_func_178" },
    { 0x179, "_func_179" },
    { 0x17A, "_func_17A" },
    { 0x17B, "_func_17B" },
    { 0x17C, "_func_17C" },
    { 0x17D, "_func_17D" },
    { 0x17E, "_func_17E" },
    { 0x17F, "_func_17F" },
    { 0x180, "_func_180" },
    { 0x181, "_func_181" },
    { 0x182, "_func_182" },
    { 0x183, "_func_183" },
    { 0x184, "_func_184" },
    { 0x185, "_func_185" },
    { 0x186, "_func_186" },
    { 0x187, "_func_187" },
    { 0x188, "_func_188" },
    { 0x189, "_func_189" },
    { 0x18A, "_func_18A" },
    { 0x18B, "_func_18B" },
    { 0x18C, "_func_18C" },
    { 0x18D, "_func_18D" },
    { 0x18E, "_func_18E" },
    { 0x18F, "_func_18F" },
    { 0x190, "_func_190" },
    { 0x191, "_func_191" },
    { 0x192, "_func_192" },
    { 0x193, "_func_193" },
    { 0x194, "_func_194" },
    { 0x195, "_func_195" },
    { 0x196, "_func_196" },
    { 0x197, "_func_197" },
    { 0x198, "_func_198" },
    { 0x199, "_func_199" },
    { 0x19A, "_func_19A" },
    { 0x19B, "_func_19B" },
    { 0x19C, "_func_19C" },
    { 0x19D, "_func_19D" },
    { 0x19E, "_func_19E" },
    { 0x19F, "_func_19F" },
    { 0x1A0, "_func_1A0" },
    { 0x1A1, "_func_1A1" },
    { 0x1A2, "_func_1A2" },
    { 0x1A3, "_func_1A3" },
    { 0x1A4, "_func_1A4" },
    { 0x1A5, "_func_1A5" },
    { 0x1A6, "_func_1A6" },
    { 0x1A7, "_func_1A7" },
    { 0x1A8, "_func_1A8" },
    { 0x1A9, "_func_1A9" },
    { 0x1AA, "_func_1AA" },
    { 0x1AB, "_func_1AB" },
    { 0x1AC, "_func_1AC" },
    { 0x1AD, "_func_1AD" },
    { 0x1AE, "_func_1AE" },
    { 0x1AF, "_func_1AF" },
    { 0x1B0, "_func_1B0" },
    { 0x1B1, "_func_1B1" },
    { 0x1B2, "_func_1B2" },
    { 0x1B3, "_func_1B3" },
    { 0x1B4, "_func_1B4" },
    { 0x1B5, "_func_1B5" },
    { 0x1B6, "_func_1B6" },
    { 0x1B7, "_func_1B7" },
    { 0x1B8, "_func_1B8" },
    { 0x1B9, "_func_1B9" },
    { 0x1BA, "_func_1BA" },
    { 0x1BB, "_func_1BB" },
    { 0x1BC, "_func_1BC" },
    { 0x1BD, "_func_1BD" },
    { 0x1BE, "_func_1BE" },
    { 0x1BF, "_func_1BF" },
    { 0x1C0, "_func_1C0" },
    { 0x1C1, "_func_1C1" },
    { 0x1C2, "_func_1C2" },
    { 0x1C3, "_func_1C3" },
    { 0x1C4, "_func_1C4" },
    { 0x1C5, "_func_1C5" },
    { 0x1C6, "_func_1C6" },
    { 0x1C7, "_func_1C7" },
    { 0x1C8, "_func_1C8" },
    { 0x1C9, "_func_1C9" },
    { 0x1CA, "_func_1CA" },
    { 0x1CB, "_func_1CB" },
    { 0x1CC, "_func_1CC" },
    { 0x1CD, "_func_1CD" },
    { 0x1CE, "_func_1CE" },
    { 0x1CF, "_func_1CF" },
    { 0x1D0, "_func_1D0" },
    { 0x1D1, "_func_1D1" },
    { 0x1D2, "_func_1D2" },
    { 0x1D3, "_func_1D3" },
    { 0x1D4, "_func_1D4" },
    { 0x1D5, "_func_1D5" },
    { 0x1D6, "_func_1D6" },
    { 0x1D7, "_func_1D7" },
    { 0x1D8, "_func_1D8" },
    { 0x1D9, "_func_1D9" },
    { 0x1DA, "_func_1DA" },
    { 0x1DB, "_func_1DB" },
    { 0x1DC, "_func_1DC" },
    { 0x1DD, "_func_1DD" },
    { 0x1DE, "_func_1DE" },
    { 0x1DF, "_func_1DF" },
    { 0x1E0, "_func_1E0" },
    { 0x1E1, "_func_1E1" },
    { 0x1E2, "_func_1E2" },
    { 0x1E3, "_func_1E3" },
    { 0x1E4, "_func_1E4" },
    { 0x1E5, "_func_1E5" },
    { 0x1E6, "_func_1E6" },
    { 0x1E7, "_func_1E7" },
    { 0x1E8, "_func_1E8" },
    { 0x1E9, "_func_1E9" },
    { 0x1EA, "_func_1EA" },
    { 0x1EB, "_func_1EB" },
    { 0x1EC, "_func_1EC" },
    { 0x1ED, "_func_1ED" },
    { 0x1EE, "_func_1EE" },
    { 0x1EF, "_func_1EF" },
    { 0x1F0, "_func_1F0" },
    { 0x1F1, "_func_1F1" },
    { 0x1F2, "_func_1F2" },
    { 0x1F3, "_func_1F3" },
    { 0x1F4, "_func_1F4" },
    { 0x1F5, "_func_1F5" },
    { 0x1F6, "_func_1F6" },
    { 0x1F7, "_func_1F7" },
    { 0x1F8, "_func_1F8" },
    { 0x1F9, "_func_1F9" },
    { 0x1FA, "_func_1FA" },
    { 0x1FB, "_func_1FB" },
    { 0x1FC, "_func_1FC" },
    { 0x1FD, "_func_1FD" },
    { 0x1FE, "_func_1FE" },
    { 0x1FF, "_func_1FF" },
    { 0x200, "_func_200" },
    { 0x201, "_func_201" },
    { 0x202, "_func_202" },
    { 0x203, "_func_203" },
    { 0x204, "_func_204" },
    { 0x205, "_func_205" },
    { 0x206, "_func_206" },
    { 0x207, "_func_207" },
    { 0x208, "_func_208" },
    { 0x209, "_func_209" },
    { 0x20A, "_func_20A" },
    { 0x20B, "_func_20B" },
    { 0x20C, "_func_20C" },
    { 0x20D, "_func_20D" },
    { 0x20E, "_func_20E" },
    { 0x20F, "_func_20F" },
    { 0x210, "_func_210" },
    { 0x211, "_func_211" },
    { 0x212, "_func_212" },
    { 0x213, "_func_213" },
    { 0x214, "_func_214" },
    { 0x215, "_func_215" },
    { 0x216, "_func_216" },
    { 0x217, "_func_217" },
    { 0x218, "_func_218" },
    { 0x219, "_func_219" },
    { 0x21A, "_func_21A" },
    { 0x21B, "_func_21B" },
    { 0x21C, "_func_21C" },
    { 0x21D, "_func_21D" },
    { 0x21E, "_func_21E" },
    { 0x21F, "_func_21F" },
    { 0x220, "_func_220" },
    { 0x221, "_func_221" },
    { 0x222, "_func_222" },
    { 0x223, "_func_223" },
    { 0x224, "_func_224" },
    { 0x225, "_func_225" },
    { 0x226, "_func_226" },
    { 0x227, "_func_227" },
    { 0x228, "_func_228" },
    { 0x229, "_func_229" },
    { 0x22A, "_func_22A" },
    { 0x22B, "_func_22B" },
    { 0x22C, "_func_22C" },
    { 0x22D, "_func_22D" },
    { 0x22E, "_func_22E" },
    { 0x22F, "_func_22F" },
    { 0x230, "_func_230" },
    { 0x231, "_func_231" },
    { 0x232, "_func_232" },
    { 0x233, "_func_233" },
    { 0x234, "_func_234" },
    { 0x235, "_func_235" },
    { 0x236, "_func_236" },
    { 0x237, "_func_237" },
    { 0x238, "_func_238" },
    { 0x239, "_func_239" },
    { 0x23A, "_func_23A" },
    { 0x23B, "_func_23B" },
    { 0x23C, "_func_23C" },
    { 0x23D, "_func_23D" },
    { 0x23E, "_func_23E" },
    { 0x23F, "_func_23F" },
    { 0x240, "_func_240" },
    { 0x241, "_func_241" },
    { 0x242, "_func_242" },
    { 0x243, "_func_243" },
    { 0x244, "_func_244" },
    { 0x245, "_func_245" },
    { 0x246, "_func_246" },
    { 0x247, "_func_247" },
    { 0x248, "_func_248" },
    { 0x249, "_func_249" },
    { 0x24A, "_func_24A" },
    { 0x24B, "_func_24B" },
    { 0x24C, "_func_24C" },
    { 0x24D, "_func_24D" },
    { 0x24E, "_func_24E" },
    { 0x24F, "_func_24F" },
    { 0x250, "_func_250" },
    { 0x251, "_func_251" },
    { 0x252, "_func_252" },
    { 0x253, "_func_253" },
    { 0x254, "_func_254" },
    { 0x255, "_func_255" },
    { 0x256, "_func_256" },
    { 0x257, "_func_257" },
    { 0x258, "_func_258" },
    { 0x259, "_func_259" },
    { 0x25A, "_func_25A" },
    { 0x25B, "_func_25B" },
    { 0x25C, "_func_25C" },
    { 0x25D, "_func_25D" },
    { 0x25E, "_func_25E" },
    { 0x25F, "_func_25F" },
    { 0x260, "_func_260" },
    { 0x261, "_func_261" },
    { 0x262, "_func_262" },
    { 0x263, "_func_263" },
    { 0x264, "_func_264" },
    { 0x265, "_func_265" },
    { 0x266, "_func_266" },
    { 0x267, "_func_267" },
    { 0x268, "_func_268" },
    { 0x269, "_func_269" },
    { 0x26A, "_func_26A" },
    { 0x26B, "_func_26B" },
    { 0x26C, "_func_26C" },
    { 0x26D, "_func_26D" },
    { 0x26E, "_func_26E" },
    { 0x26F, "_func_26F" },
    { 0x270, "_func_270" },
    { 0x271, "_func_271" },
    { 0x272, "_func_272" },
    { 0x273, "_func_273" },
    { 0x274, "_func_274" },
    { 0x275, "_func_275" },
    { 0x276, "_func_276" },
    { 0x277, "_func_277" },
    { 0x278, "_func_278" },
    { 0x279, "_func_279" },
    { 0x27A, "_func_27A" },
    { 0x27B, "_func_27B" },
    { 0x27C, "_func_27C" },
    { 0x27D, "_func_27D" },
    { 0x27E, "_func_27E" },
    { 0x27F, "_func_27F" },
    { 0x280, "_func_280" },
    { 0x281, "_func_281" },
    { 0x282, "_func_282" },
    { 0x283, "_func_283" },
    { 0x284, "_func_284" },
    { 0x285, "_func_285" },
    { 0x286, "_func_286" },
    { 0x287, "_func_287" },
    { 0x288, "_func_288" },
    { 0x289, "_func_289" },
    { 0x28A, "_func_28A" },
    { 0x28B, "_func_28B" },
    { 0x28C, "_func_28C" },
    { 0x28D, "_func_28D" },
    { 0x28E, "_func_28E" },
    { 0x28F, "_func_28F" },
    { 0x290, "_func_290" },
    { 0x291, "_func_291" },
    { 0x292, "_func_292" },
    { 0x293, "_func_293" },
    { 0x294, "_func_294" },
    { 0x295, "_func_295" },
    { 0x296, "_func_296" },
    { 0x297, "_func_297" },
    { 0x298, "_func_298" },
    { 0x299, "_func_299" },
    { 0x29A, "_func_29A" },
    { 0x29B, "_func_29B" },
    { 0x29C, "_func_29C" },
    { 0x29D, "_func_29D" },
    { 0x29E, "_func_29E" },
    { 0x29F, "_func_29F" },
    { 0x2A0, "_func_2A0" },
    { 0x2A1, "_func_2A1" },
    { 0x2A2, "_func_2A2" },
    { 0x2A3, "_func_2A3" },
    { 0x2A4, "_func_2A4" },
    { 0x2A5, "_func_2A5" },
    { 0x2A6, "_func_2A6" },
    { 0x2A7, "_func_2A7" },
    { 0x2A8, "_func_2A8" },
    { 0x2A9, "_func_2A9" },
    { 0x2AA, "_func_2AA" },
    { 0x2AB, "_func_2AB" },
    { 0x2AC, "_func_2AC" },
    { 0x2AD, "_func_2AD" },
    { 0x2AE, "_func_2AE" },
    { 0x2AF, "_func_2AF" },
    { 0x2B0, "_func_2B0" },
    { 0x2B1, "_func_2B1" },
    { 0x2B2, "_func_2B2" },
    { 0x2B3, "_func_2B3" },
    { 0x2B4, "_func_2B4" },
    { 0x2B5, "_func_2B5" },
    { 0x2B6, "_func_2B6" },
    { 0x2B7, "_func_2B7" },
    { 0x2B8, "_func_2B8" },
    { 0x2B9, "_func_2B9" },
    { 0x2BA, "_func_2BA" },
    { 0x2BB, "_func_2BB" },
    { 0x2BC, "_func_2BC" },
    { 0x2BD, "_func_2BD" },
    { 0x2BE, "_func_2BE" },
    { 0x2BF, "_func_2BF" },
    { 0x2C0, "_func_2C0" },
    { 0x2C1, "_func_2C1" },
    { 0x2C2, "_func_2C2" },
    { 0x2C3, "_func_2C3" },
    { 0x2C4, "_func_2C4" },
    { 0x2C5, "_func_2C5" },
    { 0x2C6, "_func_2C6" },
    { 0x2C7, "_func_2C7" },
    { 0x2C8, "_func_2C8" },
    { 0x2C9, "_func_2C9" },
    { 0x2CA, "_func_2CA" },
    { 0x2CB, "_func_2CB" },
    { 0x2CC, "_func_2CC" },
    { 0x2CD, "_func_2CD" },
    { 0x2CE, "_func_2CE" },
    { 0x2CF, "_func_2CF" },
    { 0x2D0, "_func_2D0" },
    { 0x2D1, "_func_2D1" },
    { 0x2D2, "_func_2D2" },
    { 0x2D3, "_func_2D3" },
    { 0x2D4, "_func_2D4" },
    { 0x2D5, "_func_2D5" },
    { 0x2D6, "_func_2D6" },
    { 0x2D7, "_func_2D7" },
    { 0x2D8, "_func_2D8" },
    { 0x2D9, "_func_2D9" },
    { 0x2DA, "_func_2DA" },
    { 0x2DB, "_func_2DB" },
    { 0x2DC, "_func_2DC" },
    { 0x2DD, "_func_2DD" },
    { 0x2DE, "_func_2DE" },
    { 0x2DF, "_func_2DF" },
    { 0x2E0, "_func_2E0" },
    { 0x2E1, "_func_2E1" },
    { 0x2E2, "_func_2E2" },
    { 0x2E3, "_func_2E3" },
    { 0x2E4, "_func_2E4" },
    { 0x2E5, "_func_2E5" },
    { 0x2E6, "_func_2E6" },
    { 0x2E7, "_func_2E7" },
    { 0x2E8, "_func_2E8" },
    { 0x2E9, "_func_2E9" },
    { 0x2EA, "_func_2EA" },
    { 0x2EB, "_func_2EB" },
    { 0x2EC, "_func_2EC" },
    { 0x2ED, "_func_2ED" },
    { 0x2EE, "_func_2EE" },
    { 0x2EF, "_func_2EF" },
    { 0x2F0, "_func_2F0" },
    { 0x2F1, "_func_2F1" },
    { 0x2F2, "_func_2F2" },
    { 0x2F3, "_func_2F3" },
    { 0x2F4, "_func_2F4" },
    { 0x2F5, "_func_2F5" },
    { 0x2F6, "_func_2F6" },
    { 0x2F7, "_func_2F7" },
    { 0x2F8, "_func_2F8" },
    { 0x2F9, "_func_2F9" },
    { 0x2FA, "_func_2FA" },
    { 0x2FB, "_func_2FB" },
    { 0x2FC, "_func_2FC" },
    { 0x2FD, "_func_2FD" },
    { 0x2FE, "_func_2FE" },
    { 0x2FF, "_func_2FF" },
    { 0x300, "_func_300" },
    { 0x301, "_func_301" },
    { 0x302, "_func_302" },
    { 0x303, "_func_303" },
    { 0x304, "_func_304" },
    { 0x305, "_func_305" },
    { 0x306, "_func_306" },
    { 0x307, "_func_307" },
    { 0x308, "_func_308" },
    { 0x309, "_func_309" },
    { 0x30A, "_func_30A" },
    { 0x30B, "_func_30B" },
    { 0x30C, "_func_30C" },
    { 0x30D, "_func_30D" },
    { 0x30E, "_func_30E" },
    { 0x30F, "_func_30F" },
    { 0x310, "_func_310" },
    { 0x311, "_func_311" },
    { 0x312, "_func_312" },
    { 0x313, "_func_313" },
    { 0x314, "_func_314" },
    { 0x315, "_func_315" },
    { 0x316, "_func_316" },
    { 0x317, "_func_317" },
    { 0x318, "_func_318" },
    { 0x319, "_func_319" },
    { 0x31A, "_func_31A" },
    { 0x31B, "_func_31B" },
    { 0x31C, "_func_31C" },
    { 0x31D, "_func_31D" },
    { 0x31E, "_func_31E" },
    { 0x31F, "_func_31F" },
    { 0x320, "_func_320" },
}};

const std::array<gsc::pair_16C, 1491> method_list
{{
    { 0x8000, "_meth_8000" },
    { 0x8001, "_meth_8001" },
    { 0x8002, "_meth_8002" },
    { 0x8003, "_meth_8003" },
    { 0x8004, "_meth_8004" },
    { 0x8005, "_meth_8005" },
    { 0x8006, "_meth_8006" },
    { 0x8007, "_meth_8007" },
    { 0x8008, "_meth_8008" },
    { 0x8009, "_meth_8009" },
    { 0x800A, "_meth_800A" },
    { 0x800B, "_meth_800B" },
    { 0x800C, "_meth_800C" },
    { 0x800D, "_meth_800D" },
    { 0x800E, "_meth_800E" },
    { 0x800F, "_meth_800F" },
    { 0x8010, "_meth_8010" },
    { 0x8011, "_meth_8011" },
    { 0x8012, "_meth_8012" },
    { 0x8013, "_meth_8013" },
    { 0x8014, "_meth_8014" },
    { 0x8015, "_meth_8015" },
    { 0x8016, "_meth_8016" },
    { 0x8017, "_meth_8017" },
    { 0x8018, "_meth_8018" },
    { 0x8019, "_meth_8019" },
    { 0x801A, "_meth_801A" },
    { 0x801B, "_meth_801B" },
    { 0x801C, "_meth_801C" },
    { 0x801D, "_meth_801D" },
    { 0x801E, "_meth_801E" },
    { 0x801F, "_meth_801F" },
    { 0x8020, "_meth_8020" },
    { 0x8021, "_meth_8021" },
    { 0x8022, "_meth_8022" },
    { 0x8023, "_meth_8023" },
    { 0x8024, "_meth_8024" },
    { 0x8025, "_meth_8025" },
    { 0x8026, "_meth_8026" },
    { 0x8027, "_meth_8027" },
    { 0x8028, "_meth_8028" },
    { 0x8029, "_meth_8029" },
    { 0x802A, "_meth_802A" },
    { 0x802B, "_meth_802B" },
    { 0x802C, "_meth_802C" },
    { 0x802D, "_meth_802D" },
    { 0x802E, "_meth_802E" },
    { 0x802F, "_meth_802F" },
    { 0x8030, "_meth_8030" },
    { 0x8031, "_meth_8031" },
    { 0x8032, "_meth_8032" },
    { 0x8033, "_meth_8033" },
    { 0x8034, "_meth_8034" },
    { 0x8035, "_meth_8035" },
    { 0x8036, "_meth_8036" },
    { 0x8037, "_meth_8037" },
    { 0x8038, "_meth_8038" },
    { 0x8039, "_meth_8039" },
    { 0x803A, "_meth_803A" },
    { 0x803B, "_meth_803B" },
    { 0x803C, "_meth_803C" },
    { 0x803D, "_meth_803D" },
    { 0x803E, "_meth_803E" },
    { 0x803F, "_meth_803F" },
    { 0x8040, "_meth_8040" },
    { 0x8041, "_meth_8041" },
    { 0x8042, "_meth_8042" },
    { 0x8043, "_meth_8043" },
    { 0x8044, "_meth_8044" },
    { 0x8045, "_meth_8045" },
    { 0x8046, "_meth_8046" },
    { 0x8047, "_meth_8047" },
    { 0x8048, "_meth_8048" },
    { 0x8049, "_meth_8049" },
    { 0x804A, "_meth_804A" },
    { 0x804B, "_meth_804B" },
    { 0x804C, "_meth_804C" },
    { 0x804D, "_meth_804D" },
    { 0x804E, "_meth_804E" },
    { 0x804F, "_meth_804F" },
    { 0x8050, "_meth_8050" },
    { 0x8051, "_meth_8051" },
    { 0x8052, "_meth_8052" },
    { 0x8053, "_meth_8053" },
    { 0x8054, "_meth_8054" },
    { 0x8055, "_meth_8055" },
    { 0x8056, "_meth_8056" },
    { 0x8057, "_meth_8057" },
    { 0x8058, "_meth_8058" },
    { 0x8059, "_meth_8059" },
    { 0x805A, "_meth_805A" },
    { 0x805B, "_meth_805B" },
    { 0x805C, "_meth_805C" },
    { 0x805D, "_meth_805D" },
    { 0x805E, "_meth_805E" },
    { 0x805F, "_meth_805F" },
    { 0x8060, "_meth_8060" },
    { 0x8061, "_meth_8061" },
    { 0x8062, "_meth_8062" },
    { 0x8063, "_meth_8063" },
    { 0x8064, "_meth_8064" },
    { 0x8065, "_meth_8065" },
    { 0x8066, "_meth_8066" },
    { 0x8067, "_meth_8067" },
    { 0x8068, "_meth_8068" },
    { 0x8069, "_meth_8069" },
    { 0x806A, "_meth_806A" },
    { 0x806B, "_meth_806B" },
    { 0x806C, "_meth_806C" },
    { 0x806D, "_meth_806D" },
    { 0x806E, "_meth_806E" },
    { 0x806F, "_meth_806F" },
    { 0x8070, "_meth_8070" },
    { 0x8071, "_meth_8071" },
    { 0x8072, "_meth_8072" },
    { 0x8073, "_meth_8073" },
    { 0x8074, "_meth_8074" },
    { 0x8075, "_meth_8075" },
    { 0x8076, "_meth_8076" },
    { 0x8077, "_meth_8077" },
    { 0x8078, "_meth_8078" },
    { 0x8079, "_meth_8079" },
    { 0x807A, "_meth_807A" },
    { 0x807B, "_meth_807B" },
    { 0x807C, "_meth_807C" },
    { 0x807D, "_meth_807D" },
    { 0x807E, "_meth_807E" },
    { 0x807F, "_meth_807F" },
    { 0x8080, "_meth_8080" },
    { 0x8081, "_meth_8081" },
    { 0x8082, "_meth_8082" },
    { 0x8083, "_meth_8083" },
    { 0x8084, "_meth_8084" },
    { 0x8085, "_meth_8085" },
    { 0x8086, "_meth_8086" },
    { 0x8087, "_meth_8087" },
    { 0x8088, "_meth_8088" },
    { 0x8089, "_meth_8089" },
    { 0x808A, "_meth_808A" },
    { 0x808B, "_meth_808B" },
    { 0x808C, "_meth_808C" },
    { 0x808D, "_meth_808D" },
    { 0x808E, "_meth_808E" },
    { 0x808F, "_meth_808F" },
    { 0x8090, "_meth_8090" },
    { 0x8091, "_meth_8091" },
    { 0x8092, "_meth_8092" },
    { 0x8093, "_meth_8093" },
    { 0x8094, "_meth_8094" },
    { 0x8095, "_meth_8095" },
    { 0x8096, "_meth_8096" },
    { 0x8097, "_meth_8097" },
    { 0x8098, "_meth_8098" },
    { 0x8099, "_meth_8099" },
    { 0x809A, "_meth_809A" },
    { 0x809B, "_meth_809B" },
    { 0x809C, "_meth_809C" },
    { 0x809D, "_meth_809D" },
    { 0x809E, "_meth_809E" },
    { 0x809F, "_meth_809F" },
    { 0x80A0, "_meth_80A0" },
    { 0x80A1, "_meth_80A1" },
    { 0x80A2, "_meth_80A2" },
    { 0x80A3, "_meth_80A3" },
    { 0x80A4, "_meth_80A4" },
    { 0x80A5, "_meth_80A5" },
    { 0x80A6, "_meth_80A6" },
    { 0x80A7, "_meth_80A7" },
    { 0x80A8, "_meth_80A8" },
    { 0x80A9, "_meth_80A9" },
    { 0x80AA, "_meth_80AA" },
    { 0x80AB, "_meth_80AB" },
    { 0x80AC, "_meth_80AC" },
    { 0x80AD, "_meth_80AD" },
    { 0x80AE, "_meth_80AE" },
    { 0x80AF, "_meth_80AF" },
    { 0x80B0, "_meth_80B0" },
    { 0x80B1, "_meth_80B1" },
    { 0x80B2, "_meth_80B2" },
    { 0x80B3, "_meth_80B3" },
    { 0x80B4, "_meth_80B4" },
    { 0x80B5, "_meth_80B5" },
    { 0x80B6, "_meth_80B6" },
    { 0x80B7, "_meth_80B7" },
    { 0x80B8, "_meth_80B8" },
    { 0x80B9, "_meth_80B9" },
    { 0x80BA, "_meth_80BA" },
    { 0x80BB, "_meth_80BB" },
    { 0x80BC, "_meth_80BC" },
    { 0x80BD, "_meth_80BD" },
    { 0x80BE, "_meth_80BE" },
    { 0x80BF, "_meth_80BF" },
    { 0x80C0, "_meth_80C0" },
    { 0x80C1, "_meth_80C1" },
    { 0x80C2, "_meth_80C2" },
    { 0x80C3, "_meth_80C3" },
    { 0x80C4, "_meth_80C4" },
    { 0x80C5, "_meth_80C5" },
    { 0x80C6, "_meth_80C6" },
    { 0x80C7, "_meth_80C7" },
    { 0x80C8, "_meth_80C8" },
    { 0x80C9, "_meth_80C9" },
    { 0x80CA, "_meth_80CA" },
    { 0x80CB, "_meth_80CB" },
    { 0x80CC, "_meth_80CC" },
    { 0x80CD, "_meth_80CD" },
    { 0x80CE, "_meth_80CE" },
    { 0x80CF, "_meth_80CF" },
    { 0x80D0, "_meth_80D0" },
    { 0x80D1, "_meth_80D1" },
    { 0x80D2, "_meth_80D2" },
    { 0x80D3, "_meth_80D3" },
    { 0x80D4, "_meth_80D4" },
    { 0x80D5, "_meth_80D5" },
    { 0x80D6, "_meth_80D6" },
    { 0x80D7, "_meth_80D7" },
    { 0x80D8, "_meth_80D8" },
    { 0x80D9, "_meth_80D9" },
    { 0x80DA, "_meth_80DA" },
    { 0x80DB, "_meth_80DB" },
    { 0x80DC, "_meth_80DC" },
    { 0x80DD, "_meth_80DD" },
    { 0x80DE, "_meth_80DE" },
    { 0x80DF, "_meth_80DF" },
    { 0x80E0, "_meth_80E0" },
    { 0x80E1, "_meth_80E1" },
    { 0x80E2, "_meth_80E2" },
    { 0x80E3, "_meth_80E3" },
    { 0x80E4, "_meth_80E4" },
    { 0x80E5, "_meth_80E5" },
    { 0x80E6, "_meth_80E6" },
    { 0x80E7, "_meth_80E7" },
    { 0x80E8, "_meth_80E8" },
    { 0x80E9, "_meth_80E9" },
    { 0x80EA, "_meth_80EA" },
    { 0x80EB, "_meth_80EB" },
    { 0x80EC, "_meth_80EC" },
    { 0x80ED, "_meth_80ED" },
    { 0x80EE, "_meth_80EE" },
    { 0x80EF, "_meth_80EF" },
    { 0x80F0, "_meth_80F0" },
    { 0x80F1, "_meth_80F1" },
    { 0x80F2, "_meth_80F2" },
    { 0x80F3, "_meth_80F3" },
    { 0x80F4, "_meth_80F4" },
    { 0x80F5, "_meth_80F5" },
    { 0x80F6, "_meth_80F6" },
    { 0x80F7, "_meth_80F7" },
    { 0x80F8, "_meth_80F8" },
    { 0x80F9, "_meth_80F9" },
    { 0x80FA, "_meth_80FA" },
    { 0x80FB, "_meth_80FB" },
    { 0x80FC, "_meth_80FC" },
    { 0x80FD, "_meth_80FD" },
    { 0x80FE, "_meth_80FE" },
    { 0x80FF, "_meth_80FF" },
    { 0x8100, "_meth_8100" },
    { 0x8101, "_meth_8101" },
    { 0x8102, "_meth_8102" },
    { 0x8103, "_meth_8103" },
    { 0x8104, "_meth_8104" },
    { 0x8105, "_meth_8105" },
    { 0x8106, "_meth_8106" },
    { 0x8107, "_meth_8107" },
    { 0x8108, "_meth_8108" },
    { 0x8109, "_meth_8109" },
    { 0x810A, "_meth_810A" },
    { 0x810B, "_meth_810B" },
    { 0x810C, "_meth_810C" },
    { 0x810D, "_meth_810D" },
    { 0x810E, "_meth_810E" },
    { 0x810F, "_meth_810F" },
    { 0x8110, "_meth_8110" },
    { 0x8111, "_meth_8111" },
    { 0x8112, "_meth_8112" },
    { 0x8113, "_meth_8113" },
    { 0x8114, "_meth_8114" },
    { 0x8115, "_meth_8115" },
    { 0x8116, "_meth_8116" },
    { 0x8117, "_meth_8117" },
    { 0x8118, "_meth_8118" },
    { 0x8119, "_meth_8119" },
    { 0x811A, "_meth_811A" },
    { 0x811B, "_meth_811B" },
    { 0x811C, "_meth_811C" },
    { 0x811D, "_meth_811D" },
    { 0x811E, "_meth_811E" },
    { 0x811F, "_meth_811F" },
    { 0x8120, "_meth_8120" },
    { 0x8121, "_meth_8121" },
    { 0x8122, "_meth_8122" },
    { 0x8123, "_meth_8123" },
    { 0x8124, "_meth_8124" },
    { 0x8125, "_meth_8125" },
    { 0x8126, "_meth_8126" },
    { 0x8127, "_meth_8127" },
    { 0x8128, "_meth_8128" },
    { 0x8129, "_meth_8129" },
    { 0x812A, "_meth_812A" },
    { 0x812B, "_meth_812B" },
    { 0x812C, "_meth_812C" },
    { 0x812D, "_meth_812D" },
    { 0x812E, "_meth_812E" },
    { 0x812F, "_meth_812F" },
    { 0x8130, "_meth_8130" },
    { 0x8131, "_meth_8131" },
    { 0x8132, "_meth_8132" },
    { 0x8133, "_meth_8133" },
    { 0x8134, "_meth_8134" },
    { 0x8135, "_meth_8135" },
    { 0x8136, "_meth_8136" },
    { 0x8137, "_meth_8137" },
    { 0x8138, "_meth_8138" },
    { 0x8139, "_meth_8139" },
    { 0x813A, "_meth_813A" },
    { 0x813B, "_meth_813B" },
    { 0x813C, "_meth_813C" },
    { 0x813D, "_meth_813D" },
    { 0x813E, "_meth_813E" },
    { 0x813F, "_meth_813F" },
    { 0x8140, "_meth_8140" },
    { 0x8141, "_meth_8141" },
    { 0x8142, "_meth_8142" },
    { 0x8143, "_meth_8143" },
    { 0x8144, "_meth_8144" },
    { 0x8145, "_meth_8145" },
    { 0x8146, "_meth_8146" },
    { 0x8147, "_meth_8147" },
    { 0x8148, "_meth_8148" },
    { 0x8149, "_meth_8149" },
    { 0x814A, "_meth_814A" },
    { 0x814B, "_meth_814B" },
    { 0x814C, "_meth_814C" },
    { 0x814D, "_meth_814D" },
    { 0x814E, "_meth_814E" },
    { 0x814F, "_meth_814F" },
    { 0x8150, "_meth_8150" },
    { 0x8151, "_meth_8151" },
    { 0x8152, "_meth_8152" },
    { 0x8153, "_meth_8153" },
    { 0x8154, "_meth_8154" },
    { 0x8155, "_meth_8155" },
    { 0x8156, "_meth_8156" },
    { 0x8157, "_meth_8157" },
    { 0x8158, "_meth_8158" },
    { 0x8159, "_meth_8159" },
    { 0x815A, "_meth_815A" },
    { 0x815B, "_meth_815B" },
    { 0x815C, "_meth_815C" },
    { 0x815D, "_meth_815D" },
    { 0x815E, "_meth_815E" },
    { 0x815F, "_meth_815F" },
    { 0x8160, "_meth_8160" },
    { 0x8161, "_meth_8161" },
    { 0x8162, "_meth_8162" },
    { 0x8163, "_meth_8163" },
    { 0x8164, "_meth_8164" },
    { 0x8165, "_meth_8165" },
    { 0x8166, "_meth_8166" },
    { 0x8167, "_meth_8167" },
    { 0x8168, "_meth_8168" },
    { 0x8169, "_meth_8169" },
    { 0x816A, "_meth_816A" },
    { 0x816B, "_meth_816B" },
    { 0x816C, "_meth_816C" },
    { 0x816D, "_meth_816D" },
    { 0x816E, "_meth_816E" },
    { 0x816F, "_meth_816F" },
    { 0x8170, "_meth_8170" },
    { 0x8171, "_meth_8171" },
    { 0x8172, "_meth_8172" },
    { 0x8173, "_meth_8173" },
    { 0x8174, "_meth_8174" },
    { 0x8175, "_meth_8175" },
    { 0x8176, "_meth_8176" },
    { 0x8177, "_meth_8177" },
    { 0x8178, "_meth_8178" },
    { 0x8179, "_meth_8179" },
    { 0x817A, "_meth_817A" },
    { 0x817B, "_meth_817B" },
    { 0x817C, "_meth_817C" },
    { 0x817D, "_meth_817D" },
    { 0x817E, "_meth_817E" },
    { 0x817F, "_meth_817F" },
    { 0x8180, "_meth_8180" },
    { 0x8181, "_meth_8181" },
    { 0x8182, "_meth_8182" },
    { 0x8183, "_meth_8183" },
    { 0x8184, "_meth_8184" },
    { 0x8185, "_meth_8185" },
    { 0x8186, "_meth_8186" },
    { 0x8187, "_meth_8187" },
    { 0x8188, "_meth_8188" },
    { 0x8189, "_meth_8189" },
    { 0x818A, "_meth_818A" },
    { 0x818B, "_meth_818B" },
    { 0x818C, "_meth_818C" },
    { 0x818D, "_meth_818D" },
    { 0x818E, "_meth_818E" },
    { 0x818F, "_meth_818F" },
    { 0x8190, "_meth_8190" },
    { 0x8191, "_meth_8191" },
    { 0x8192, "_meth_8192" },
    { 0x8193, "_meth_8193" },
    { 0x8194, "_meth_8194" },
    { 0x8195, "_meth_8195" },
    { 0x8196, "_meth_8196" },
    { 0x8197, "_meth_8197" },
    { 0x8198, "_meth_8198" },
    { 0x8199, "_meth_8199" },
    { 0x819A, "_meth_819A" },
    { 0x819B, "_meth_819B" },
    { 0x819C, "_meth_819C" },
    { 0x819D, "_meth_819D" },
    { 0x819E, "_meth_819E" },
    { 0x819F, "_meth_819F" },
    { 0x81A0, "_meth_81A0" },
    { 0x81A1, "_meth_81A1" },
    { 0x81A2, "_meth_81A2" },
    { 0x81A3, "_meth_81A3" },
    { 0x81A4, "_meth_81A4" },
    { 0x81A5, "_meth_81A5" },
    { 0x81A6, "_meth_81A6" },
    { 0x81A7, "_meth_81A7" },
    { 0x81A8, "_meth_81A8" },
    { 0x81A9, "_meth_81A9" },
    { 0x81AA, "_meth_81AA" },
    { 0x81AB, "_meth_81AB" },
    { 0x81AC, "_meth_81AC" },
    { 0x81AD, "_meth_81AD" },
    { 0x81AE, "_meth_81AE" },
    { 0x81AF, "_meth_81AF" },
    { 0x81B0, "_meth_81B0" },
    { 0x81B1, "_meth_81B1" },
    { 0x81B2, "_meth_81B2" },
    { 0x81B3, "_meth_81B3" },
    { 0x81B4, "_meth_81B4" },
    { 0x81B5, "_meth_81B5" },
    { 0x81B6, "_meth_81B6" },
    { 0x81B7, "_meth_81B7" },
    { 0x81B8, "_meth_81B8" },
    { 0x81B9, "_meth_81B9" },
    { 0x81BA, "_meth_81BA" },
    { 0x81BB, "_meth_81BB" },
    { 0x81BC, "_meth_81BC" },
    { 0x81BD, "_meth_81BD" },
    { 0x81BE, "_meth_81BE" },
    { 0x81BF, "_meth_81BF" },
    { 0x81C0, "_meth_81C0" },
    { 0x81C1, "_meth_81C1" },
    { 0x81C2, "_meth_81C2" },
    { 0x81C3, "_meth_81C3" },
    { 0x81C4, "_meth_81C4" },
    { 0x81C5, "_meth_81C5" },
    { 0x81C6, "_meth_81C6" },
    { 0x81C7, "_meth_81C7" },
    { 0x81C8, "_meth_81C8" },
    { 0x81C9, "_meth_81C9" },
    { 0x81CA, "_meth_81CA" },
    { 0x81CB, "_meth_81CB" },
    { 0x81CC, "_meth_81CC" },
    { 0x81CD, "_meth_81CD" },
    { 0x81CE, "_meth_81CE" },
    { 0x81CF, "_meth_81CF" },
    { 0x81D0, "_meth_81D0" },
    { 0x81D1, "_meth_81D1" },
    { 0x81D2, "_meth_81D2" },
    { 0x81D3, "_meth_81D3" },
    { 0x81D4, "_meth_81D4" },
    { 0x81D5, "_meth_81D5" },
    { 0x81D6, "_meth_81D6" },
    { 0x81D7, "_meth_81D7" },
    { 0x81D8, "_meth_81D8" },
    { 0x81D9, "_meth_81D9" },
    { 0x81DA, "_meth_81DA" },
    { 0x81DB, "_meth_81DB" },
    { 0x81DC, "_meth_81DC" },
    { 0x81DD, "_meth_81DD" },
    { 0x81DE, "_meth_81DE" },
    { 0x81DF, "_meth_81DF" },
    { 0x81E0, "_meth_81E0" },
    { 0x81E1, "_meth_81E1" },
    { 0x81E2, "_meth_81E2" },
    { 0x81E3, "_meth_81E3" },
    { 0x81E4, "_meth_81E4" },
    { 0x81E5, "_meth_81E5" },
    { 0x81E6, "_meth_81E6" },
    { 0x81E7, "_meth_81E7" },
    { 0x81E8, "_meth_81E8" },
    { 0x81E9, "_meth_81E9" },
    { 0x81EA, "_meth_81EA" },
    { 0x81EB, "_meth_81EB" },
    { 0x81EC, "_meth_81EC" },
    { 0x81ED, "_meth_81ED" },
    { 0x81EE, "_meth_81EE" },
    { 0x81EF, "_meth_81EF" },
    { 0x81F0, "_meth_81F0" },
    { 0x81F1, "_meth_81F1" },
    { 0x81F2, "_meth_81F2" },
    { 0x81F3, "_meth_81F3" },
    { 0x81F4, "_meth_81F4" },
    { 0x81F5, "_meth_81F5" },
    { 0x81F6, "_meth_81F6" },
    { 0x81F7, "_meth_81F7" },
    { 0x81F8, "_meth_81F8" },
    { 0x81F9, "_meth_81F9" },
    { 0x81FA, "_meth_81FA" },
    { 0x81FB, "_meth_81FB" },
    { 0x81FC, "_meth_81FC" },
    { 0x81FD, "_meth_81FD" },
    { 0x81FE, "_meth_81FE" },
    { 0x81FF, "_meth_81FF" },
    { 0x8200, "_meth_8200" },
    { 0x8201, "_meth_8201" },
    { 0x8202, "_meth_8202" },
    { 0x8203, "_meth_8203" },
    { 0x8204, "_meth_8204" },
    { 0x8205, "_meth_8205" },
    { 0x8206, "_meth_8206" },
    { 0x8207, "_meth_8207" },
    { 0x8208, "_meth_8208" },
    { 0x8209, "_meth_8209" },
    { 0x820A, "_meth_820A" },
    { 0x820B, "_meth_820B" },
    { 0x820C, "_meth_820C" },
    { 0x820D, "_meth_820D" },
    { 0x820E, "_meth_820E" },
    { 0x820F, "_meth_820F" },
    { 0x8210, "_meth_8210" },
    { 0x8211, "_meth_8211" },
    { 0x8212, "_meth_8212" },
    { 0x8213, "_meth_8213" },
    { 0x8214, "_meth_8214" },
    { 0x8215, "_meth_8215" },
    { 0x8216, "_meth_8216" },
    { 0x8217, "_meth_8217" },
    { 0x8218, "_meth_8218" },
    { 0x8219, "_meth_8219" },
    { 0x821A, "_meth_821A" },
    { 0x821B, "_meth_821B" },
    { 0x821C, "_meth_821C" },
    { 0x821D, "_meth_821D" },
    { 0x821E, "_meth_821E" },
    { 0x821F, "_meth_821F" },
    { 0x8220, "_meth_8220" },
    { 0x8221, "_meth_8221" },
    { 0x8222, "_meth_8222" },
    { 0x8223, "_meth_8223" },
    { 0x8224, "_meth_8224" },
    { 0x8225, "_meth_8225" },
    { 0x8226, "_meth_8226" },
    { 0x8227, "_meth_8227" },
    { 0x8228, "_meth_8228" },
    { 0x8229, "_meth_8229" },
    { 0x822A, "_meth_822A" },
    { 0x822B, "_meth_822B" },
    { 0x822C, "_meth_822C" },
    { 0x822D, "_meth_822D" },
    { 0x822E, "_meth_822E" },
    { 0x822F, "_meth_822F" },
    { 0x8230, "_meth_8230" },
    { 0x8231, "_meth_8231" },
    { 0x8232, "_meth_8232" },
    { 0x8233, "_meth_8233" },
    { 0x8234, "_meth_8234" },
    { 0x8235, "_meth_8235" },
    { 0x8236, "_meth_8236" },
    { 0x8237, "_meth_8237" },
    { 0x8238, "_meth_8238" },
    { 0x8239, "_meth_8239" },
    { 0x823A, "_meth_823A" },
    { 0x823B, "_meth_823B" },
    { 0x823C, "_meth_823C" },
    { 0x823D, "_meth_823D" },
    { 0x823E, "_meth_823E" },
    { 0x823F, "_meth_823F" },
    { 0x8240, "_meth_8240" },
    { 0x8241, "_meth_8241" },
    { 0x8242, "_meth_8242" },
    { 0x8243, "_meth_8243" },
    { 0x8244, "_meth_8244" },
    { 0x8245, "_meth_8245" },
    { 0x8246, "_meth_8246" },
    { 0x8247, "_meth_8247" },
    { 0x8248, "_meth_8248" },
    { 0x8249, "_meth_8249" },
    { 0x824A, "_meth_824A" },
    { 0x824B, "_meth_824B" },
    { 0x824C, "_meth_824C" },
    { 0x824D, "_meth_824D" },
    { 0x824E, "_meth_824E" },
    { 0x824F, "_meth_824F" },
    { 0x8250, "_meth_8250" },
    { 0x8251, "_meth_8251" },
    { 0x8252, "_meth_8252" },
    { 0x8253, "_meth_8253" },
    { 0x8254, "_meth_8254" },
    { 0x8255, "_meth_8255" },
    { 0x8256, "_meth_8256" },
    { 0x8257, "_meth_8257" },
    { 0x8258, "_meth_8258" },
    { 0x8259, "_meth_8259" },
    { 0x825A, "_meth_825A" },
    { 0x825B, "_meth_825B" },
    { 0x825C, "_meth_825C" },
    { 0x825D, "_meth_825D" },
    { 0x825E, "_meth_825E" },
    { 0x825F, "_meth_825F" },
    { 0x8260, "_meth_8260" },
    { 0x8261, "_meth_8261" },
    { 0x8262, "_meth_8262" },
    { 0x8263, "_meth_8263" },
    { 0x8264, "_meth_8264" },
    { 0x8265, "_meth_8265" },
    { 0x8266, "_meth_8266" },
    { 0x8267, "_meth_8267" },
    { 0x8268, "_meth_8268" },
    { 0x8269, "_meth_8269" },
    { 0x826A, "_meth_826A" },
    { 0x826B, "_meth_826B" },
    { 0x826C, "_meth_826C" },
    { 0x826D, "_meth_826D" },
    { 0x826E, "_meth_826E" },
    { 0x826F, "_meth_826F" },
    { 0x8270, "_meth_8270" },
    { 0x8271, "_meth_8271" },
    { 0x8272, "_meth_8272" },
    { 0x8273, "_meth_8273" },
    { 0x8274, "_meth_8274" },
    { 0x8275, "_meth_8275" },
    { 0x8276, "_meth_8276" },
    { 0x8277, "_meth_8277" },
    { 0x8278, "_meth_8278" },
    { 0x8279, "_meth_8279" },
    { 0x827A, "_meth_827A" },
    { 0x827B, "_meth_827B" },
    { 0x827C, "_meth_827C" },
    { 0x827D, "_meth_827D" },
    { 0x827E, "_meth_827E" },
    { 0x827F, "_meth_827F" },
    { 0x8280, "_meth_8280" },
    { 0x8281, "_meth_8281" },
    { 0x8282, "_meth_8282" },
    { 0x8283, "_meth_8283" },
    { 0x8284, "_meth_8284" },
    { 0x8285, "_meth_8285" },
    { 0x8286, "_meth_8286" },
    { 0x8287, "_meth_8287" },
    { 0x8288, "_meth_8288" },
    { 0x8289, "_meth_8289" },
    { 0x828A, "_meth_828A" },
    { 0x828B, "_meth_828B" },
    { 0x828C, "_meth_828C" },
    { 0x828D, "_meth_828D" },
    { 0x828E, "_meth_828E" },
    { 0x828F, "_meth_828F" },
    { 0x8290, "_meth_8290" },
    { 0x8291, "_meth_8291" },
    { 0x8292, "_meth_8292" },
    { 0x8293, "_meth_8293" },
    { 0x8294, "_meth_8294" },
    { 0x8295, "_meth_8295" },
    { 0x8296, "_meth_8296" },
    { 0x8297, "_meth_8297" },
    { 0x8298, "_meth_8298" },
    { 0x8299, "_meth_8299" },
    { 0x829A, "_meth_829A" },
    { 0x829B, "_meth_829B" },
    { 0x829C, "_meth_829C" },
    { 0x829D, "_meth_829D" },
    { 0x829E, "_meth_829E" },
    { 0x829F, "_meth_829F" },
    { 0x82A0, "_meth_82A0" },
    { 0x82A1, "_meth_82A1" },
    { 0x82A2, "_meth_82A2" },
    { 0x82A3, "_meth_82A3" },
    { 0x82A4, "_meth_82A4" },
    { 0x82A5, "_meth_82A5" },
    { 0x82A6, "_meth_82A6" },
    { 0x82A7, "_meth_82A7" },
    { 0x82A8, "_meth_82A8" },
    { 0x82A9, "_meth_82A9" },
    { 0x82AA, "_meth_82AA" },
    { 0x82AB, "_meth_82AB" },
    { 0x82AC, "_meth_82AC" },
    { 0x82AD, "_meth_82AD" },
    { 0x82AE, "_meth_82AE" },
    { 0x82AF, "_meth_82AF" },
    { 0x82B0, "_meth_82B0" },
    { 0x82B1, "_meth_82B1" },
    { 0x82B2, "_meth_82B2" },
    { 0x82B3, "_meth_82B3" },
    { 0x82B4, "_meth_82B4" },
    { 0x82B5, "_meth_82B5" },
    { 0x82B6, "_meth_82B6" },
    { 0x82B7, "_meth_82B7" },
    { 0x82B8, "_meth_82B8" },
    { 0x82B9, "_meth_82B9" },
    { 0x82BA, "_meth_82BA" },
    { 0x82BB, "_meth_82BB" },
    { 0x82BC, "_meth_82BC" },
    { 0x82BD, "_meth_82BD" },
    { 0x82BE, "_meth_82BE" },
    { 0x82BF, "_meth_82BF" },
    { 0x82C0, "_meth_82C0" },
    { 0x82C1, "_meth_82C1" },
    { 0x82C2, "_meth_82C2" },
    { 0x82C3, "_meth_82C3" },
    { 0x82C4, "_meth_82C4" },
    { 0x82C5, "_meth_82C5" },
    { 0x82C6, "_meth_82C6" },
    { 0x82C7, "_meth_82C7" },
    { 0x82C8, "_meth_82C8" },
    { 0x82C9, "_meth_82C9" },
    { 0x82CA, "_meth_82CA" },
    { 0x82CB, "_meth_82CB" },
    { 0x82CC, "_meth_82CC" },
    { 0x82CD, "_meth_82CD" },
    { 0x82CE, "_meth_82CE" },
    { 0x82CF, "_meth_82CF" },
    { 0x82D0, "_meth_82D0" },
    { 0x82D1, "_meth_82D1" },
    { 0x82D2, "_meth_82D2" },
    { 0x82D3, "_meth_82D3" },
    { 0x82D4, "_meth_82D4" },
    { 0x82D5, "_meth_82D5" },
    { 0x82D6, "_meth_82D6" },
    { 0x82D7, "_meth_82D7" },
    { 0x82D8, "_meth_82D8" },
    { 0x82D9, "_meth_82D9" },
    { 0x82DA, "_meth_82DA" },
    { 0x82DB, "_meth_82DB" },
    { 0x82DC, "_meth_82DC" },
    { 0x82DD, "_meth_82DD" },
    { 0x82DE, "_meth_82DE" },
    { 0x82DF, "_meth_82DF" },
    { 0x82E0, "_meth_82E0" },
    { 0x82E1, "_meth_82E1" },
    { 0x82E2, "_meth_82E2" },
    { 0x82E3, "_meth_82E3" },
    { 0x82E4, "_meth_82E4" },
    { 0x82E5, "_meth_82E5" },
    { 0x82E6, "_meth_82E6" },
    { 0x82E7, "_meth_82E7" },
    { 0x82E8, "_meth_82E8" },
    { 0x82E9, "_meth_82E9" },
    { 0x82EA, "_meth_82EA" },
    { 0x82EB, "_meth_82EB" },
    { 0x82EC, "_meth_82EC" },
    { 0x82ED, "_meth_82ED" },
    { 0x82EE, "_meth_82EE" },
    { 0x82EF, "_meth_82EF" },
    { 0x82F0, "_meth_82F0" },
    { 0x82F1, "_meth_82F1" },
    { 0x82F2, "_meth_82F2" },
    { 0x82F3, "_meth_82F3" },
    { 0x82F4, "_meth_82F4" },
    { 0x82F5, "_meth_82F5" },
    { 0x82F6, "_meth_82F6" },
    { 0x82F7, "_meth_82F7" },
    { 0x82F8, "_meth_82F8" },
    { 0x82F9, "_meth_82F9" },
    { 0x82FA, "_meth_82FA" },
    { 0x82FB, "_meth_82FB" },
    { 0x82FC, "_meth_82FC" },
    { 0x82FD, "_meth_82FD" },
    { 0x82FE, "_meth_82FE" },
    { 0x82FF, "_meth_82FF" },
    { 0x8300, "_meth_8300" },
    { 0x8301, "_meth_8301" },
    { 0x8302, "_meth_8302" },
    { 0x8303, "_meth_8303" },
    { 0x8304, "_meth_8304" },
    { 0x8305, "_meth_8305" },
    { 0x8306, "_meth_8306" },
    { 0x8307, "_meth_8307" },
    { 0x8308, "_meth_8308" },
    { 0x8309, "_meth_8309" },
    { 0x830A, "_meth_830A" },
    { 0x830B, "_meth_830B" },
    { 0x830C, "_meth_830C" },
    { 0x830D, "_meth_830D" },
    { 0x830E, "_meth_830E" },
    { 0x830F, "_meth_830F" },
    { 0x8310, "_meth_8310" },
    { 0x8311, "_meth_8311" },
    { 0x8312, "_meth_8312" },
    { 0x8313, "_meth_8313" },
    { 0x8314, "_meth_8314" },
    { 0x8315, "_meth_8315" },
    { 0x8316, "_meth_8316" },
    { 0x8317, "_meth_8317" },
    { 0x8318, "_meth_8318" },
    { 0x8319, "_meth_8319" },
    { 0x831A, "_meth_831A" },
    { 0x831B, "_meth_831B" },
    { 0x831C, "_meth_831C" },
    { 0x831D, "_meth_831D" },
    { 0x831E, "_meth_831E" },
    { 0x831F, "_meth_831F" },
    { 0x8320, "_meth_8320" },
    { 0x8321, "_meth_8321" },
    { 0x8322, "_meth_8322" },
    { 0x8323, "_meth_8323" },
    { 0x8324, "_meth_8324" },
    { 0x8325, "_meth_8325" },
    { 0x8326, "_meth_8326" },
    { 0x8327, "_meth_8327" },
    { 0x8328, "_meth_8328" },
    { 0x8329, "_meth_8329" },
    { 0x832A, "_meth_832A" },
    { 0x832B, "_meth_832B" },
    { 0x832C, "_meth_832C" },
    { 0x832D, "_meth_832D" },
    { 0x832E, "_meth_832E" },
    { 0x832F, "_meth_832F" },
    { 0x8330, "_meth_8330" },
    { 0x8331, "_meth_8331" },
    { 0x8332, "_meth_8332" },
    { 0x8333, "_meth_8333" },
    { 0x8334, "_meth_8334" },
    { 0x8335, "_meth_8335" },
    { 0x8336, "_meth_8336" },
    { 0x8337, "_meth_8337" },
    { 0x8338, "_meth_8338" },
    { 0x8339, "_meth_8339" },
    { 0x833A, "_meth_833A" },
    { 0x833B, "_meth_833B" },
    { 0x833C, "_meth_833C" },
    { 0x833D, "_meth_833D" },
    { 0x833E, "_meth_833E" },
    { 0x833F, "_meth_833F" },
    { 0x8340, "_meth_8340" },
    { 0x8341, "_meth_8341" },
    { 0x8342, "_meth_8342" },
    { 0x8343, "_meth_8343" },
    { 0x8344, "_meth_8344" },
    { 0x8345, "_meth_8345" },
    { 0x8346, "_meth_8346" },
    { 0x8347, "_meth_8347" },
    { 0x8348, "_meth_8348" },
    { 0x8349, "_meth_8349" },
    { 0x834A, "_meth_834A" },
    { 0x834B, "_meth_834B" },
    { 0x834C, "_meth_834C" },
    { 0x834D, "_meth_834D" },
    { 0x834E, "_meth_834E" },
    { 0x834F, "_meth_834F" },
    { 0x8350, "_meth_8350" },
    { 0x8351, "_meth_8351" },
    { 0x8352, "_meth_8352" },
    { 0x8353, "_meth_8353" },
    { 0x8354, "_meth_8354" },
    { 0x8355, "_meth_8355" },
    { 0x8356, "_meth_8356" },
    { 0x8357, "_meth_8357" },
    { 0x8358, "_meth_8358" },
    { 0x8359, "_meth_8359" },
    { 0x835A, "_meth_835A" },
    { 0x835B, "_meth_835B" },
    { 0x835C, "_meth_835C" },
    { 0x835D, "_meth_835D" },
    { 0x835E, "_meth_835E" },
    { 0x835F, "_meth_835F" },
    { 0x8360, "_meth_8360" },
    { 0x8361, "_meth_8361" },
    { 0x8362, "_meth_8362" },
    { 0x8363, "_meth_8363" },
    { 0x8364, "_meth_8364" },
    { 0x8365, "_meth_8365" },
    { 0x8366, "_meth_8366" },
    { 0x8367, "_meth_8367" },
    { 0x8368, "_meth_8368" },
    { 0x8369, "_meth_8369" },
    { 0x836A, "_meth_836A" },
    { 0x836B, "_meth_836B" },
    { 0x836C, "_meth_836C" },
    { 0x836D, "_meth_836D" },
    { 0x836E, "_meth_836E" },
    { 0x836F, "_meth_836F" },
    { 0x8370, "_meth_8370" },
    { 0x8371, "_meth_8371" },
    { 0x8372, "_meth_8372" },
    { 0x8373, "_meth_8373" },
    { 0x8374, "_meth_8374" },
    { 0x8375, "_meth_8375" },
    { 0x8376, "_meth_8376" },
    { 0x8377, "_meth_8377" },
    { 0x8378, "_meth_8378" },
    { 0x8379, "_meth_8379" },
    { 0x837A, "_meth_837A" },
    { 0x837B, "_meth_837B" },
    { 0x837C, "_meth_837C" },
    { 0x837D, "_meth_837D" },
    { 0x837E, "_meth_837E" },
    { 0x837F, "_meth_837F" },
    { 0x8380, "_meth_8380" },
    { 0x8381, "_meth_8381" },
    { 0x8382, "_meth_8382" },
    { 0x8383, "_meth_8383" },
    { 0x8384, "_meth_8384" },
    { 0x8385, "_meth_8385" },
    { 0x8386, "_meth_8386" },
    { 0x8387, "_meth_8387" },
    { 0x8388, "_meth_8388" },
    { 0x8389, "_meth_8389" },
    { 0x838A, "_meth_838A" },
    { 0x838B, "_meth_838B" },
    { 0x838C, "_meth_838C" },
    { 0x838D, "_meth_838D" },
    { 0x838E, "_meth_838E" },
    { 0x838F, "_meth_838F" },
    { 0x8390, "_meth_8390" },
    { 0x8391, "_meth_8391" },
    { 0x8392, "_meth_8392" },
    { 0x8393, "_meth_8393" },
    { 0x8394, "_meth_8394" },
    { 0x8395, "_meth_8395" },
    { 0x8396, "_meth_8396" },
    { 0x8397, "_meth_8397" },
    { 0x8398, "_meth_8398" },
    { 0x8399, "_meth_8399" },
    { 0x839A, "_meth_839A" },
    { 0x839B, "_meth_839B" },
    { 0x839C, "_meth_839C" },
    { 0x839D, "_meth_839D" },
    { 0x839E, "_meth_839E" },
    { 0x839F, "_meth_839F" },
    { 0x83A0, "_meth_83A0" },
    { 0x83A1, "_meth_83A1" },
    { 0x83A2, "_meth_83A2" },
    { 0x83A3, "_meth_83A3" },
    { 0x83A4, "_meth_83A4" },
    { 0x83A5, "_meth_83A5" },
    { 0x83A6, "_meth_83A6" },
    { 0x83A7, "_meth_83A7" },
    { 0x83A8, "_meth_83A8" },
    { 0x83A9, "_meth_83A9" },
    { 0x83AA, "_meth_83AA" },
    { 0x83AB, "_meth_83AB" },
    { 0x83AC, "_meth_83AC" },
    { 0x83AD, "_meth_83AD" },
    { 0x83AE, "_meth_83AE" },
    { 0x83AF, "_meth_83AF" },
    { 0x83B0, "_meth_83B0" },
    { 0x83B1, "_meth_83B1" },
    { 0x83B2, "_meth_83B2" },
    { 0x83B3, "_meth_83B3" },
    { 0x83B4, "_meth_83B4" },
    { 0x83B5, "_meth_83B5" },
    { 0x83B6, "_meth_83B6" },
    { 0x83B7, "_meth_83B7" },
    { 0x83B8, "_meth_83B8" },
    { 0x83B9, "_meth_83B9" },
    { 0x83BA, "_meth_83BA" },
    { 0x83BB, "_meth_83BB" },
    { 0x83BC, "_meth_83BC" },
    { 0x83BD, "_meth_83BD" },
    { 0x83BE, "_meth_83BE" },
    { 0x83BF, "_meth_83BF" },
    { 0x83C0, "_meth_83C0" },
    { 0x83C1, "_meth_83C1" },
    { 0x83C2, "_meth_83C2" },
    { 0x83C3, "_meth_83C3" },
    { 0x83C4, "_meth_83C4" },
    { 0x83C5, "_meth_83C5" },
    { 0x83C6, "_meth_83C6" },
    { 0x83C7, "_meth_83C7" },
    { 0x83C8, "_meth_83C8" },
    { 0x83C9, "_meth_83C9" },
    { 0x83CA, "_meth_83CA" },
    { 0x83CB, "_meth_83CB" },
    { 0x83CC, "_meth_83CC" },
    { 0x83CD, "_meth_83CD" },
    { 0x83CE, "_meth_83CE" },
    { 0x83CF, "_meth_83CF" },
    { 0x83D0, "_meth_83D0" },
    { 0x83D1, "_meth_83D1" },
    { 0x83D2, "_meth_83D2" },
    { 0x83D3, "_meth_83D3" },
    { 0x83D4, "_meth_83D4" },
    { 0x83D5, "_meth_83D5" },
    { 0x83D6, "_meth_83D6" },
    { 0x83D7, "_meth_83D7" },
    { 0x83D8, "_meth_83D8" },
    { 0x83D9, "_meth_83D9" },
    { 0x83DA, "_meth_83DA" },
    { 0x83DB, "_meth_83DB" },
    { 0x83DC, "_meth_83DC" },
    { 0x83DD, "_meth_83DD" },
    { 0x83DE, "_meth_83DE" },
    { 0x83DF, "_meth_83DF" },
    { 0x83E0, "_meth_83E0" },
    { 0x83E1, "_meth_83E1" },
    { 0x83E2, "_meth_83E2" },
    { 0x83E3, "_meth_83E3" },
    { 0x83E4, "_meth_83E4" },
    { 0x83E5, "_meth_83E5" },
    { 0x83E6, "_meth_83E6" },
    { 0x83E7, "_meth_83E7" },
    { 0x83E8, "_meth_83E8" },
    { 0x83E9, "_meth_83E9" },
    { 0x83EA, "_meth_83EA" },
    { 0x83EB, "_meth_83EB" },
    { 0x83EC, "_meth_83EC" },
    { 0x83ED, "_meth_83ED" },
    { 0x83EE, "_meth_83EE" },
    { 0x83EF, "_meth_83EF" },
    { 0x83F0, "_meth_83F0" },
    { 0x83F1, "_meth_83F1" },
    { 0x83F2, "_meth_83F2" },
    { 0x83F3, "_meth_83F3" },
    { 0x83F4, "_meth_83F4" },
    { 0x83F5, "_meth_83F5" },
    { 0x83F6, "_meth_83F6" },
    { 0x83F7, "_meth_83F7" },
    { 0x83F8, "_meth_83F8" },
    { 0x83F9, "_meth_83F9" },
    { 0x83FA, "_meth_83FA" },
    { 0x83FB, "_meth_83FB" },
    { 0x83FC, "_meth_83FC" },
    { 0x83FD, "_meth_83FD" },
    { 0x83FE, "_meth_83FE" },
    { 0x83FF, "_meth_83FF" },
    { 0x8400, "_meth_8400" },
    { 0x8401, "_meth_8401" },
    { 0x8402, "_meth_8402" },
    { 0x8403, "_meth_8403" },
    { 0x8404, "_meth_8404" },
    { 0x8405, "_meth_8405" },
    { 0x8406, "_meth_8406" },
    { 0x8407, "_meth_8407" },
    { 0x8408, "_meth_8408" },
    { 0x8409, "_meth_8409" },
    { 0x840A, "_meth_840A" },
    { 0x840B, "_meth_840B" },
    { 0x840C, "_meth_840C" },
    { 0x840D, "_meth_840D" },
    { 0x840E, "_meth_840E" },
    { 0x840F, "_meth_840F" },
    { 0x8410, "_meth_8410" },
    { 0x8411, "_meth_8411" },
    { 0x8412, "_meth_8412" },
    { 0x8413, "_meth_8413" },
    { 0x8414, "_meth_8414" },
    { 0x8415, "_meth_8415" },
    { 0x8416, "_meth_8416" },
    { 0x8417, "_meth_8417" },
    { 0x8418, "_meth_8418" },
    { 0x8419, "_meth_8419" },
    { 0x841A, "_meth_841A" },
    { 0x841B, "_meth_841B" },
    { 0x841C, "_meth_841C" },
    { 0x841D, "_meth_841D" },
    { 0x841E, "_meth_841E" },
    { 0x841F, "_meth_841F" },
    { 0x8420, "_meth_8420" },
    { 0x8421, "_meth_8421" },
    { 0x8422, "_meth_8422" },
    { 0x8423, "_meth_8423" },
    { 0x8424, "_meth_8424" },
    { 0x8425, "_meth_8425" },
    { 0x8426, "_meth_8426" },
    { 0x8427, "_meth_8427" },
    { 0x8428, "_meth_8428" },
    { 0x8429, "_meth_8429" },
    { 0x842A, "_meth_842A" },
    { 0x842B, "_meth_842B" },
    { 0x842C, "_meth_842C" },
    { 0x842D, "_meth_842D" },
    { 0x842E, "_meth_842E" },
    { 0x842F, "_meth_842F" },
    { 0x8430, "_meth_8430" },
    { 0x8431, "_meth_8431" },
    { 0x8432, "_meth_8432" },
    { 0x8433, "_meth_8433" },
    { 0x8434, "_meth_8434" },
    { 0x8435, "_meth_8435" },
    { 0x8436, "_meth_8436" },
    { 0x8437, "_meth_8437" },
    { 0x8438, "_meth_8438" },
    { 0x8439, "_meth_8439" },
    { 0x843A, "_meth_843A" },
    { 0x843B, "_meth_843B" },
    { 0x843C, "_meth_843C" },
    { 0x843D, "_meth_843D" },
    { 0x843E, "_meth_843E" },
    { 0x843F, "_meth_843F" },
    { 0x8440, "_meth_8440" },
    { 0x8441, "_meth_8441" },
    { 0x8442, "_meth_8442" },
    { 0x8443, "_meth_8443" },
    { 0x8444, "_meth_8444" },
    { 0x8445, "_meth_8445" },
    { 0x8446, "_meth_8446" },
    { 0x8447, "_meth_8447" },
    { 0x8448, "_meth_8448" },
    { 0x8449, "_meth_8449" },
    { 0x844A, "_meth_844A" },
    { 0x844B, "_meth_844B" },
    { 0x844C, "_meth_844C" },
    { 0x844D, "_meth_844D" },
    { 0x844E, "_meth_844E" },
    { 0x844F, "_meth_844F" },
    { 0x8450, "_meth_8450" },
    { 0x8451, "_meth_8451" },
    { 0x8452, "_meth_8452" },
    { 0x8453, "_meth_8453" },
    { 0x8454, "_meth_8454" },
    { 0x8455, "_meth_8455" },
    { 0x8456, "_meth_8456" },
    { 0x8457, "_meth_8457" },
    { 0x8458, "_meth_8458" },
    { 0x8459, "_meth_8459" },
    { 0x845A, "_meth_845A" },
    { 0x845B, "_meth_845B" },
    { 0x845C, "_meth_845C" },
    { 0x845D, "_meth_845D" },
    { 0x845E, "_meth_845E" },
    { 0x845F, "_meth_845F" },
    { 0x8460, "_meth_8460" },
    { 0x8461, "_meth_8461" },
    { 0x8462, "_meth_8462" },
    { 0x8463, "_meth_8463" },
    { 0x8464, "_meth_8464" },
    { 0x8465, "_meth_8465" },
    { 0x8466, "_meth_8466" },
    { 0x8467, "_meth_8467" },
    { 0x8468, "_meth_8468" },
    { 0x8469, "_meth_8469" },
    { 0x846A, "_meth_846A" },
    { 0x846B, "_meth_846B" },
    { 0x846C, "_meth_846C" },
    { 0x846D, "_meth_846D" },
    { 0x846E, "_meth_846E" },
    { 0x846F, "_meth_846F" },
    { 0x8470, "_meth_8470" },
    { 0x8471, "_meth_8471" },
    { 0x8472, "_meth_8472" },
    { 0x8473, "_meth_8473" },
    { 0x8474, "_meth_8474" },
    { 0x8475, "_meth_8475" },
    { 0x8476, "_meth_8476" },
    { 0x8477, "_meth_8477" },
    { 0x8478, "_meth_8478" },
    { 0x8479, "_meth_8479" },
    { 0x847A, "_meth_847A" },
    { 0x847B, "_meth_847B" },
    { 0x847C, "_meth_847C" },
    { 0x847D, "_meth_847D" },
    { 0x847E, "_meth_847E" },
    { 0x847F, "_meth_847F" },
    { 0x8480, "_meth_8480" },
    { 0x8481, "_meth_8481" },
    { 0x8482, "_meth_8482" },
    { 0x8483, "_meth_8483" },
    { 0x8484, "_meth_8484" },
    { 0x8485, "_meth_8485" },
    { 0x8486, "_meth_8486" },
    { 0x8487, "_meth_8487" },
    { 0x8488, "_meth_8488" },
    { 0x8489, "_meth_8489" },
    { 0x848A, "_meth_848A" },
    { 0x848B, "_meth_848B" },
    { 0x848C, "_meth_848C" },
    { 0x848D, "_meth_848D" },
    { 0x848E, "_meth_848E" },
    { 0x848F, "_meth_848F" },
    { 0x8490, "_meth_8490" },
    { 0x8491, "_meth_8491" },
    { 0x8492, "_meth_8492" },
    { 0x8493, "_meth_8493" },
    { 0x8494, "_meth_8494" },
    { 0x8495, "_meth_8495" },
    { 0x8496, "_meth_8496" },
    { 0x8497, "_meth_8497" },
    { 0x8498, "_meth_8498" },
    { 0x8499, "_meth_8499" },
    { 0x849A, "_meth_849A" },
    { 0x849B, "_meth_849B" },
    { 0x849C, "_meth_849C" },
    { 0x849D, "_meth_849D" },
    { 0x849E, "_meth_849E" },
    { 0x849F, "_meth_849F" },
    { 0x84A0, "_meth_84A0" },
    { 0x84A1, "_meth_84A1" },
    { 0x84A2, "_meth_84A2" },
    { 0x84A3, "_meth_84A3" },
    { 0x84A4, "_meth_84A4" },
    { 0x84A5, "_meth_84A5" },
    { 0x84A6, "_meth_84A6" },
    { 0x84A7, "_meth_84A7" },
    { 0x84A8, "_meth_84A8" },
    { 0x84A9, "_meth_84A9" },
    { 0x84AA, "_meth_84AA" },
    { 0x84AB, "_meth_84AB" },
    { 0x84AC, "_meth_84AC" },
    { 0x84AD, "_meth_84AD" },
    { 0x84AE, "_meth_84AE" },
    { 0x84AF, "_meth_84AF" },
    { 0x84B0, "_meth_84B0" },
    { 0x84B1, "_meth_84B1" },
    { 0x84B2, "_meth_84B2" },
    { 0x84B3, "_meth_84B3" },
    { 0x84B4, "_meth_84B4" },
    { 0x84B5, "_meth_84B5" },
    { 0x84B6, "_meth_84B6" },
    { 0x84B7, "_meth_84B7" },
    { 0x84B8, "_meth_84B8" },
    { 0x84B9, "_meth_84B9" },
    { 0x84BA, "_meth_84BA" },
    { 0x84BB, "_meth_84BB" },
    { 0x84BC, "_meth_84BC" },
    { 0x84BD, "_meth_84BD" },
    { 0x84BE, "_meth_84BE" },
    { 0x84BF, "_meth_84BF" },
    { 0x84C0, "_meth_84C0" },
    { 0x84C1, "_meth_84C1" },
    { 0x84C2, "_meth_84C2" },
    { 0x84C3, "_meth_84C3" },
    { 0x84C4, "_meth_84C4" },
    { 0x84C5, "_meth_84C5" },
    { 0x84C6, "_meth_84C6" },
    { 0x84C7, "_meth_84C7" },
    { 0x84C8, "_meth_84C8" },
    { 0x84C9, "_meth_84C9" },
    { 0x84CA, "_meth_84CA" },
    { 0x84CB, "_meth_84CB" },
    { 0x84CC, "_meth_84CC" },
    { 0x84CD, "_meth_84CD" },
    { 0x84CE, "_meth_84CE" },
    { 0x84CF, "_meth_84CF" },
    { 0x84D0, "_meth_84D0" },
    { 0x84D1, "_meth_84D1" },
    { 0x84D2, "_meth_84D2" },
    { 0x84D3, "_meth_84D3" },
    { 0x84D4, "_meth_84D4" },
    { 0x84D5, "_meth_84D5" },
    { 0x84D6, "_meth_84D6" },
    { 0x84D7, "_meth_84D7" },
    { 0x84D8, "_meth_84D8" },
    { 0x84D9, "_meth_84D9" },
    { 0x84DA, "_meth_84DA" },
    { 0x84DB, "_meth_84DB" },
    { 0x84DC, "_meth_84DC" },
    { 0x84DD, "_meth_84DD" },
    { 0x84DE, "_meth_84DE" },
    { 0x84DF, "_meth_84DF" },
    { 0x84E0, "_meth_84E0" },
    { 0x84E1, "_meth_84E1" },
    { 0x84E2, "_meth_84E2" },
    { 0x84E3, "_meth_84E3" },
    { 0x84E4, "_meth_84E4" },
    { 0x84E5, "_meth_84E5" },
    { 0x84E6, "_meth_84E6" },
    { 0x84E7, "_meth_84E7" },
    { 0x84E8, "_meth_84E8" },
    { 0x84E9, "_meth_84E9" },
    { 0x84EA, "_meth_84EA" },
    { 0x84EB, "_meth_84EB" },
    { 0x84EC, "_meth_84EC" },
    { 0x84ED, "_meth_84ED" },
    { 0x84EE, "_meth_84EE" },
    { 0x84EF, "_meth_84EF" },
    { 0x84F0, "_meth_84F0" },
    { 0x84F1, "_meth_84F1" },
    { 0x84F2, "_meth_84F2" },
    { 0x84F3, "_meth_84F3" },
    { 0x84F4, "_meth_84F4" },
    { 0x84F5, "_meth_84F5" },
    { 0x84F6, "_meth_84F6" },
    { 0x84F7, "_meth_84F7" },
    { 0x84F8, "_meth_84F8" },
    { 0x84F9, "_meth_84F9" },
    { 0x84FA, "_meth_84FA" },
    { 0x84FB, "_meth_84FB" },
    { 0x84FC, "_meth_84FC" },
    { 0x84FD, "_meth_84FD" },
    { 0x84FE, "_meth_84FE" },
    { 0x84FF, "_meth_84FF" },
    { 0x8500, "_meth_8500" },
    { 0x8501, "_meth_8501" },
    { 0x8502, "_meth_8502" },
    { 0x8503, "_meth_8503" },
    { 0x8504, "_meth_8504" },
    { 0x8505, "_meth_8505" },
    { 0x8506, "_meth_8506" },
    { 0x8507, "_meth_8507" },
    { 0x8508, "_meth_8508" },
    { 0x8509, "_meth_8509" },
    { 0x850A, "_meth_850A" },
    { 0x850B, "_meth_850B" },
    { 0x850C, "_meth_850C" },
    { 0x850D, "_meth_850D" },
    { 0x850E, "_meth_850E" },
    { 0x850F, "_meth_850F" },
    { 0x8510, "_meth_8510" },
    { 0x8511, "_meth_8511" },
    { 0x8512, "_meth_8512" },
    { 0x8513, "_meth_8513" },
    { 0x8514, "_meth_8514" },
    { 0x8515, "_meth_8515" },
    { 0x8516, "_meth_8516" },
    { 0x8517, "_meth_8517" },
    { 0x8518, "_meth_8518" },
    { 0x8519, "_meth_8519" },
    { 0x851A, "_meth_851A" },
    { 0x851B, "_meth_851B" },
    { 0x851C, "_meth_851C" },
    { 0x851D, "_meth_851D" },
    { 0x851E, "_meth_851E" },
    { 0x851F, "_meth_851F" },
    { 0x8520, "_meth_8520" },
    { 0x8521, "_meth_8521" },
    { 0x8522, "_meth_8522" },
    { 0x8523, "_meth_8523" },
    { 0x8524, "_meth_8524" },
    { 0x8525, "_meth_8525" },
    { 0x8526, "_meth_8526" },
    { 0x8527, "_meth_8527" },
    { 0x8528, "_meth_8528" },
    { 0x8529, "_meth_8529" },
    { 0x852A, "_meth_852A" },
    { 0x852B, "_meth_852B" },
    { 0x852C, "_meth_852C" },
    { 0x852D, "_meth_852D" },
    { 0x852E, "_meth_852E" },
    { 0x852F, "_meth_852F" },
    { 0x8530, "_meth_8530" },
    { 0x8531, "_meth_8531" },
    { 0x8532, "_meth_8532" },
    { 0x8533, "_meth_8533" },
    { 0x8534, "_meth_8534" },
    { 0x8535, "_meth_8535" },
    { 0x8536, "_meth_8536" },
    { 0x8537, "_meth_8537" },
    { 0x8538, "_meth_8538" },
    { 0x8539, "_meth_8539" },
    { 0x853A, "_meth_853A" },
    { 0x853B, "_meth_853B" },
    { 0x853C, "_meth_853C" },
    { 0x853D, "_meth_853D" },
    { 0x853E, "_meth_853E" },
    { 0x853F, "_meth_853F" },
    { 0x8540, "_meth_8540" },
    { 0x8541, "_meth_8541" },
    { 0x8542, "_meth_8542" },
    { 0x8543, "_meth_8543" },
    { 0x8544, "_meth_8544" },
    { 0x8545, "_meth_8545" },
    { 0x8546, "_meth_8546" },
    { 0x8547, "_meth_8547" },
    { 0x8548, "_meth_8548" },
    { 0x8549, "_meth_8549" },
    { 0x854A, "_meth_854A" },
    { 0x854B, "_meth_854B" },
    { 0x854C, "_meth_854C" },
    { 0x854D, "_meth_854D" },
    { 0x854E, "_meth_854E" },
    { 0x854F, "_meth_854F" },
    { 0x8550, "_meth_8550" },
    { 0x8551, "_meth_8551" },
    { 0x8552, "_meth_8552" },
    { 0x8553, "_meth_8553" },
    { 0x8554, "_meth_8554" },
    { 0x8555, "_meth_8555" },
    { 0x8556, "_meth_8556" },
    { 0x8557, "_meth_8557" },
    { 0x8558, "_meth_8558" },
    { 0x8559, "_meth_8559" },
    { 0x855A, "_meth_855A" },
    { 0x855B, "_meth_855B" },
    { 0x855C, "_meth_855C" },
    { 0x855D, "_meth_855D" },
    { 0x855E, "_meth_855E" },
    { 0x855F, "_meth_855F" },
    { 0x8560, "_meth_8560" },
    { 0x8561, "_meth_8561" },
    { 0x8562, "_meth_8562" },
    { 0x8563, "_meth_8563" },
    { 0x8564, "_meth_8564" },
    { 0x8565, "_meth_8565" },
    { 0x8566, "_meth_8566" },
    { 0x8567, "_meth_8567" },
    { 0x8568, "_meth_8568" },
    { 0x8569, "_meth_8569" },
    { 0x856A, "_meth_856A" },
    { 0x856B, "_meth_856B" },
    { 0x856C, "_meth_856C" },
    { 0x856D, "_meth_856D" },
    { 0x856E, "_meth_856E" },
    { 0x856F, "_meth_856F" },
    { 0x8570, "_meth_8570" },
    { 0x8571, "_meth_8571" },
    { 0x8572, "_meth_8572" },
    { 0x8573, "_meth_8573" },
    { 0x8574, "_meth_8574" },
    { 0x8575, "_meth_8575" },
    { 0x8576, "_meth_8576" },
    { 0x8577, "_meth_8577" },
    { 0x8578, "_meth_8578" },
    { 0x8579, "_meth_8579" },
    { 0x857A, "_meth_857A" },
    { 0x857B, "_meth_857B" },
    { 0x857C, "_meth_857C" },
    { 0x857D, "_meth_857D" },
    { 0x857E, "_meth_857E" },
    { 0x857F, "_meth_857F" },
    { 0x8580, "_meth_8580" },
    { 0x8581, "_meth_8581" },
    { 0x8582, "_meth_8582" },
    { 0x8583, "_meth_8583" },
    { 0x8584, "_meth_8584" },
    { 0x8585, "_meth_8585" },
    { 0x8586, "_meth_8586" },
    { 0x8587, "_meth_8587" },
    { 0x8588, "_meth_8588" },
    { 0x8589, "_meth_8589" },
    { 0x858A, "_meth_858A" },
    { 0x858B, "_meth_858B" },
    { 0x858C, "_meth_858C" },
    { 0x858D, "_meth_858D" },
    { 0x858E, "_meth_858E" },
    { 0x858F, "_meth_858F" },
    { 0x8590, "_meth_8590" },
    { 0x8591, "_meth_8591" },
    { 0x8592, "_meth_8592" },
    { 0x8593, "_meth_8593" },
    { 0x8594, "_meth_8594" },
    { 0x8595, "_meth_8595" },
    { 0x8596, "_meth_8596" },
    { 0x8597, "_meth_8597" },
    { 0x8598, "_meth_8598" },
    { 0x8599, "_meth_8599" },
    { 0x859A, "_meth_859A" },
    { 0x859B, "_meth_859B" },
    { 0x859C, "_meth_859C" },
    { 0x859D, "_meth_859D" },
    { 0x859E, "_meth_859E" },
    { 0x859F, "_meth_859F" },
    { 0x85A0, "_meth_85A0" },
    { 0x85A1, "_meth_85A1" },
    { 0x85A2, "_meth_85A2" },
    { 0x85A3, "_meth_85A3" },
    { 0x85A4, "_meth_85A4" },
    { 0x85A5, "_meth_85A5" },
    { 0x85A6, "_meth_85A6" },
    { 0x85A7, "_meth_85A7" },
    { 0x85A8, "_meth_85A8" },
    { 0x85A9, "_meth_85A9" },
    { 0x85AA, "_meth_85AA" },
    { 0x85AB, "_meth_85AB" },
    { 0x85AC, "_meth_85AC" },
    { 0x85AD, "_meth_85AD" },
    { 0x85AE, "_meth_85AE" },
    { 0x85AF, "_meth_85AF" },
    { 0x85B0, "_meth_85B0" },
    { 0x85B1, "_meth_85B1" },
    { 0x85B2, "_meth_85B2" },
    { 0x85B3, "_meth_85B3" },
    { 0x85B4, "_meth_85B4" },
    { 0x85B5, "_meth_85B5" },
    { 0x85B6, "_meth_85B6" },
    { 0x85B7, "_meth_85B7" },
    { 0x85B8, "_meth_85B8" },
    { 0x85B9, "_meth_85B9" },
    { 0x85BA, "_meth_85BA" },
    { 0x85BB, "_meth_85BB" },
    { 0x85BC, "_meth_85BC" },
    { 0x85BD, "_meth_85BD" },
    { 0x85BE, "_meth_85BE" },
    { 0x85BF, "_meth_85BF" },
    { 0x85C0, "_meth_85C0" },
    { 0x85C1, "_meth_85C1" },
    { 0x85C2, "_meth_85C2" },
    { 0x85C3, "_meth_85C3" },
    { 0x85C4, "_meth_85C4" },
    { 0x85C5, "_meth_85C5" },
    { 0x85C6, "_meth_85C6" },
    { 0x85C7, "_meth_85C7" },
    { 0x85C8, "_meth_85C8" },
    { 0x85C9, "_meth_85C9" },
    { 0x85CA, "_meth_85CA" },
    { 0x85CB, "_meth_85CB" },
    { 0x85CC, "_meth_85CC" },
    { 0x85CD, "_meth_85CD" },
    { 0x85CE, "_meth_85CE" },
    { 0x85CF, "_meth_85CF" },
    { 0x85D0, "_meth_85D0" },
    { 0x85D1, "_meth_85D1" },
    { 0x85D2, "_meth_85D2" },
}};

const std::array<gsc::pair_16C, 1> file_list
{{
    { 0, "DUMMY" },
}};

const std::array<gsc::pair_16C, 1> token_list
{{
    { 0, "DUMMY" },
}};

struct __init__
{
    __init__()
    {
        static bool init = false;
        if(init) return;
        init = true;

        opcode_map.reserve(opcode_list.size());
        opcode_map_rev.reserve(opcode_list.size());
        function_map.reserve(function_list.size());
        function_map_rev.reserve(function_list.size());
        method_map.reserve(method_list.size());
        method_map_rev.reserve(method_list.size());
        file_map.reserve(file_list.size());
        file_map_rev.reserve(file_list.size());
        token_map.reserve(token_list.size());
        token_map_rev.reserve(token_list.size());

        for(const auto& entry : opcode_list)
        {
            opcode_map.insert({ entry.key, entry.value });
            opcode_map_rev.insert({ entry.value, entry.key });
        }

        for(const auto& entry : function_list)
        {
            function_map.insert({ entry.key, entry.value });
            function_map_rev.insert({ entry.value, entry.key });
        }

        for(const auto& entry : method_list)
        {
            method_map.insert({ entry.key, entry.value });
            method_map_rev.insert({ entry.value, entry.key });
        }

        for(const auto& entry : file_list)
        {
            file_map.insert({ entry.key, entry.value });
            file_map_rev.insert({ entry.value, entry.key });
        }

        for(const auto& entry : token_list)
        {
            token_map.insert({ entry.key, entry.value });
            token_map_rev.insert({ utils::string::to_lower(entry.value), entry.key });
        }
    }
};

__init__ _;

} // namespace xsk::gsc::h2
